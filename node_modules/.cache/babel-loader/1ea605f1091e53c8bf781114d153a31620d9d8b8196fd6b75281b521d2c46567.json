{"ast":null,"code":"import React,{useState}from'react';import'./QuestionStack.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const QuestionStack=_ref=>{let{questions,onDelete,onReorder,currentIndex,gameState,hasStarted}=_ref;const[draggedIndex,setDraggedIndex]=useState(null);const[dragOverIndex,setDragOverIndex]=useState(null);const[dragOverPosition,setDragOverPosition]=useState(null);const handleDragStart=(e,index)=>{// 완료된 문제는 이동 불가\nconst status=getQuestionStatus(index);if(status==='completed')return;setDraggedIndex(index);e.dataTransfer.effectAllowed='move';};const handleDragOver=(e,index)=>{e.preventDefault();const status=getQuestionStatus(index);if(status==='completed')return;const target=e.currentTarget;const rect=target.getBoundingClientRect();const offsetY=e.clientY-rect.top;const pos=offsetY<rect.height/2?'before':'after';setDragOverIndex(index);setDragOverPosition(pos);};const handleDragLeave=()=>{setDragOverIndex(null);setDragOverPosition(null);};const handleDrop=(e,dropIndex)=>{e.preventDefault();if(draggedIndex===null||draggedIndex===dropIndex){setDraggedIndex(null);setDragOverIndex(null);setDragOverPosition(null);return;}const newQuestions=[...questions];const draggedQuestion=newQuestions[draggedIndex];const dropStatus=getQuestionStatus(dropIndex);const dragStatus=getQuestionStatus(draggedIndex);// 완료된 위치로의 이동 금지, 완료된 아이템 이동 금지\nif(dropStatus==='completed'||dragStatus==='completed'){setDraggedIndex(null);setDragOverIndex(null);return;}// 드래그된 아이템 제거\nnewQuestions.splice(draggedIndex,1);// 새 위치에 삽입\nlet insertIndex=draggedIndex<dropIndex?dropIndex-1:dropIndex;// 리스트 끝으로 이동 허용 (맨 아래도 드랍 허용)\nif(dropIndex>=newQuestions.length){insertIndex=newQuestions.length;}// 위/아래 위치 보정\nif(dragOverPosition==='after'){insertIndex=draggedIndex<dropIndex?dropIndex:dropIndex+1;if(insertIndex>newQuestions.length)insertIndex=newQuestions.length;}else if(dragOverPosition==='before'){insertIndex=draggedIndex<dropIndex?dropIndex-1:dropIndex;if(insertIndex<0)insertIndex=0;}newQuestions.splice(insertIndex,0,draggedQuestion);onReorder(newQuestions);setDraggedIndex(null);setDragOverIndex(null);setDragOverPosition(null);};const handleDragEnd=()=>{setDraggedIndex(null);setDragOverIndex(null);};const getQuestionTypeText=type=>{switch(type){case'ox':return'OX';case'multiple':return'객관식';case'short':return'주관식';default:return'문제';}};const getQuestionStatus=index=>{if(gameState==='waiting'){// 게임 시작 이후 대기 상태에서는 진행된 문제는 완료로 유지\nif(hasStarted){return index<=currentIndex?'completed':'upcoming';}return'upcoming';}if(index<currentIndex)return'completed';if(index===currentIndex)return'current';return'upcoming';};const truncateText=function(text){let maxLength=arguments.length>1&&arguments[1]!==undefined?arguments[1]:50;if(text.length<=maxLength)return text;return text.substring(0,maxLength)+'...';};return/*#__PURE__*/_jsxs(\"div\",{className:\"question-stack\",children:[questions.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"empty-stack\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"empty-message\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"empty-icon\",children:\"\\uD83D\\uDCDD\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\uBB38\\uC81C\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"}),/*#__PURE__*/_jsx(\"p\",{className:\"empty-sub\",children:\"\\uBB38\\uC81C\\uB97C \\uCD94\\uAC00\\uD574\\uBCF4\\uC138\\uC694\"})]})}):/*#__PURE__*/_jsx(\"div\",{className:\"questions-list\",children:questions.map((question,index)=>{const status=getQuestionStatus(index);const isDragging=draggedIndex===index;const isDragOver=dragOverIndex===index;return/*#__PURE__*/_jsxs(\"div\",{className:\"question-card \".concat(status,\" \").concat(isDragging?'dragging':'',\" \").concat(isDragOver?'drag-over':'',\" \").concat(isDragOver&&dragOverPosition==='before'?'insertion-before':'',\" \").concat(isDragOver&&dragOverPosition==='after'?'insertion-after':''),draggable:gameState==='waiting'&&status!=='completed',onDragStart:e=>handleDragStart(e,index),onDragOver:e=>handleDragOver(e,index),onDragLeave:handleDragLeave,onDrop:e=>handleDrop(e,index),onDragEnd:handleDragEnd,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"question-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"question-number\",children:[\"\\uBB38\\uC81C \",index+1]}),/*#__PURE__*/_jsx(\"div\",{className:\"question-type\",children:getQuestionTypeText(question.type)}),/*#__PURE__*/_jsxs(\"div\",{className:\"question-score\",children:[question.score,\"\\uC810\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"question-content\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"question-text\",children:truncateText(question.question)}),question.type==='ox'&&/*#__PURE__*/_jsxs(\"div\",{className:\"question-answer-preview\",children:[\"\\uC815\\uB2F5: \",question.correctAnswer]}),question.type==='multiple'&&question.options&&/*#__PURE__*/_jsxs(\"div\",{className:\"question-answer-preview\",children:[\"\\uC815\\uB2F5: \",question.options[question.correctAnswer]]}),question.type==='short'&&/*#__PURE__*/_jsxs(\"div\",{className:\"question-answer-preview\",children:[\"\\uC815\\uB2F5: \",question.correctAnswer]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"question-footer\",children:gameState==='waiting'&&status!=='completed'&&/*#__PURE__*/_jsx(\"button\",{className:\"delete-question-btn\",onClick:()=>onDelete(question.id),title:\"\\uBB38\\uC81C \\uC0AD\\uC81C\",children:\"\\uD83D\\uDDD1\\uFE0F\"})}),status==='current'&&/*#__PURE__*/_jsx(\"div\",{className:\"current-indicator\",children:/*#__PURE__*/_jsx(\"span\",{children:\"\\uC9C4\\uD589 \\uC911\"})}),status==='completed'&&/*#__PURE__*/_jsx(\"div\",{className:\"completed-indicator\",children:/*#__PURE__*/_jsx(\"span\",{children:\"\\uC644\\uB8CC\"})})]},question.id);})}),questions.length>0&&gameState==='waiting'&&/*#__PURE__*/_jsx(\"div\",{className:\"stack-help\",children:/*#__PURE__*/_jsx(\"p\",{children:\"\\uD83D\\uDCA1 \\uBB38\\uC81C\\uB97C \\uB4DC\\uB798\\uADF8\\uD558\\uC5EC \\uC21C\\uC11C\\uB97C \\uBCC0\\uACBD\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4\"})})]});};export default QuestionStack;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","QuestionStack","_ref","questions","onDelete","onReorder","currentIndex","gameState","hasStarted","draggedIndex","setDraggedIndex","dragOverIndex","setDragOverIndex","dragOverPosition","setDragOverPosition","handleDragStart","e","index","status","getQuestionStatus","dataTransfer","effectAllowed","handleDragOver","preventDefault","target","currentTarget","rect","getBoundingClientRect","offsetY","clientY","top","pos","height","handleDragLeave","handleDrop","dropIndex","newQuestions","draggedQuestion","dropStatus","dragStatus","splice","insertIndex","length","handleDragEnd","getQuestionTypeText","type","truncateText","text","maxLength","arguments","undefined","substring","className","children","map","question","isDragging","isDragOver","concat","draggable","onDragStart","onDragOver","onDragLeave","onDrop","onDragEnd","score","correctAnswer","options","onClick","id","title"],"sources":["C:/Users/9204r/.cursor/avatar/src/components/QuestionStack.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Question, GameState } from '../types/game';\nimport './QuestionStack.css';\n\ninterface QuestionStackProps {\n  questions: Question[];\n  onDelete: (questionId: string) => void;\n  onReorder: (reorderedQuestions: Question[]) => void;\n  currentIndex: number;\n  gameState: GameState;\n  hasStarted?: boolean;\n}\n\nconst QuestionStack: React.FC<QuestionStackProps> = ({\n  questions,\n  onDelete,\n  onReorder,\n  currentIndex,\n  gameState,\n  hasStarted\n}) => {\n  const [draggedIndex, setDraggedIndex] = useState<number | null>(null);\n  const [dragOverIndex, setDragOverIndex] = useState<number | null>(null);\n  const [dragOverPosition, setDragOverPosition] = useState<'before' | 'after' | null>(null);\n\n  const handleDragStart = (e: React.DragEvent, index: number) => {\n    // 완료된 문제는 이동 불가\n    const status = getQuestionStatus(index);\n    if (status === 'completed') return;\n    setDraggedIndex(index);\n    e.dataTransfer.effectAllowed = 'move';\n  };\n\n  const handleDragOver = (e: React.DragEvent, index: number) => {\n    e.preventDefault();\n    const status = getQuestionStatus(index);\n    if (status === 'completed') return;\n    const target = e.currentTarget as HTMLElement;\n    const rect = target.getBoundingClientRect();\n    const offsetY = e.clientY - rect.top;\n    const pos: 'before' | 'after' = offsetY < rect.height / 2 ? 'before' : 'after';\n    setDragOverIndex(index);\n    setDragOverPosition(pos);\n  };\n\n  const handleDragLeave = () => {\n    setDragOverIndex(null);\n    setDragOverPosition(null);\n  };\n\n  const handleDrop = (e: React.DragEvent, dropIndex: number) => {\n    e.preventDefault();\n    \n    if (draggedIndex === null || draggedIndex === dropIndex) {\n    setDraggedIndex(null);\n    setDragOverIndex(null);\n    setDragOverPosition(null);\n      return;\n    }\n\n    const newQuestions = [...questions];\n    const draggedQuestion = newQuestions[draggedIndex];\n    const dropStatus = getQuestionStatus(dropIndex);\n    const dragStatus = getQuestionStatus(draggedIndex);\n    // 완료된 위치로의 이동 금지, 완료된 아이템 이동 금지\n    if (dropStatus === 'completed' || dragStatus === 'completed') {\n      setDraggedIndex(null);\n      setDragOverIndex(null);\n      return;\n    }\n    \n    // 드래그된 아이템 제거\n    newQuestions.splice(draggedIndex, 1);\n    \n    // 새 위치에 삽입\n    let insertIndex = draggedIndex < dropIndex ? dropIndex - 1 : dropIndex;\n    // 리스트 끝으로 이동 허용 (맨 아래도 드랍 허용)\n    if (dropIndex >= newQuestions.length) {\n      insertIndex = newQuestions.length;\n    }\n    // 위/아래 위치 보정\n    if (dragOverPosition === 'after') {\n      insertIndex = draggedIndex < dropIndex ? dropIndex : dropIndex + 1;\n      if (insertIndex > newQuestions.length) insertIndex = newQuestions.length;\n    } else if (dragOverPosition === 'before') {\n      insertIndex = draggedIndex < dropIndex ? dropIndex - 1 : dropIndex;\n      if (insertIndex < 0) insertIndex = 0;\n    }\n    newQuestions.splice(insertIndex, 0, draggedQuestion);\n    \n    onReorder(newQuestions);\n    setDraggedIndex(null);\n    setDragOverIndex(null);\n    setDragOverPosition(null);\n  };\n\n  const handleDragEnd = () => {\n    setDraggedIndex(null);\n    setDragOverIndex(null);\n  };\n\n  const getQuestionTypeText = (type: string): string => {\n    switch (type) {\n      case 'ox': return 'OX';\n      case 'multiple': return '객관식';\n      case 'short': return '주관식';\n      default: return '문제';\n    }\n  };\n\n  const getQuestionStatus = (index: number): 'upcoming' | 'current' | 'completed' => {\n    if (gameState === 'waiting') {\n      // 게임 시작 이후 대기 상태에서는 진행된 문제는 완료로 유지\n      if (hasStarted) {\n        return index <= currentIndex ? 'completed' : 'upcoming';\n      }\n      return 'upcoming';\n    }\n    if (index < currentIndex) return 'completed';\n    if (index === currentIndex) return 'current';\n    return 'upcoming';\n  };\n\n  const truncateText = (text: string, maxLength: number = 50): string => {\n    if (text.length <= maxLength) return text;\n    return text.substring(0, maxLength) + '...';\n  };\n\n  return (\n    <div className=\"question-stack\">\n      {questions.length === 0 ? (\n        <div className=\"empty-stack\">\n          <div className=\"empty-message\">\n            <span className=\"empty-icon\">📝</span>\n            <p>문제가 없습니다</p>\n            <p className=\"empty-sub\">문제를 추가해보세요</p>\n          </div>\n        </div>\n      ) : (\n        <div className=\"questions-list\">\n          {questions.map((question, index) => {\n            const status = getQuestionStatus(index);\n            const isDragging = draggedIndex === index;\n            const isDragOver = dragOverIndex === index;\n            \n            return (\n              <div\n                key={question.id}\n                className={`question-card ${status} ${isDragging ? 'dragging' : ''} ${isDragOver ? 'drag-over' : ''} ${isDragOver && dragOverPosition==='before' ? 'insertion-before' : ''} ${isDragOver && dragOverPosition==='after' ? 'insertion-after' : ''}`}\n                draggable={gameState === 'waiting' && status !== 'completed'}\n                onDragStart={(e) => handleDragStart(e, index)}\n                onDragOver={(e) => handleDragOver(e, index)}\n                onDragLeave={handleDragLeave}\n                onDrop={(e) => handleDrop(e, index)}\n                onDragEnd={handleDragEnd}\n              >\n                <div className=\"question-header\">\n                  <div className=\"question-number\">문제 {index + 1}</div>\n                  <div className=\"question-type\">\n                    {getQuestionTypeText(question.type)}\n                  </div>\n                  <div className=\"question-score\">{question.score}점</div>\n                </div>\n                \n                <div className=\"question-content\">\n                  <p className=\"question-text\">\n                    {truncateText(question.question)}\n                  </p>\n                  \n                  {question.type === 'ox' && (\n                    <div className=\"question-answer-preview\">\n                      정답: {question.correctAnswer}\n                    </div>\n                  )}\n                  \n                  {question.type === 'multiple' && question.options && (\n                    <div className=\"question-answer-preview\">\n                      정답: {question.options[question.correctAnswer as number]}\n                    </div>\n                  )}\n                  \n                  {question.type === 'short' && (\n                    <div className=\"question-answer-preview\">\n                      정답: {question.correctAnswer}\n                    </div>\n                  )}\n                </div>\n                \n                <div className=\"question-footer\">\n                  {gameState === 'waiting' && status !== 'completed' && (\n                    <button\n                      className=\"delete-question-btn\"\n                      onClick={() => onDelete(question.id)}\n                      title=\"문제 삭제\"\n                    >\n                      🗑️\n                    </button>\n                  )}\n                </div>\n                \n                {status === 'current' && (\n                  <div className=\"current-indicator\">\n                    <span>진행 중</span>\n                  </div>\n                )}\n                \n                {status === 'completed' && (\n                  <div className=\"completed-indicator\">\n                    <span>완료</span>\n                  </div>\n                )}\n              </div>\n            );\n          })}\n        </div>\n      )}\n      \n      {questions.length > 0 && gameState === 'waiting' && (\n        <div className=\"stack-help\">\n          <p>💡 문제를 드래그하여 순서를 변경할 수 있습니다</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default QuestionStack;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}