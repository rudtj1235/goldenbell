{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import Avatar from'avataaars2';import{useNavigate}from'react-router-dom';import syncManager from'../services/SyncManager';import{useNewGameContext}from'../contexts/NewGameContext';import'./GamePlayer.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const GamePlayer=()=>{var _player$avatar,_player$avatar2,_player$avatar3,_player$avatar4,_player$avatar5,_player$avatar6,_player$avatar7,_player$avatar8,_player$avatar9;const[currentPlayer,setCurrentPlayer]=useState(null);const[timeLeft,setTimeLeft]=useState(0);const[selectedAnswer,setSelectedAnswer]=useState('');const[showAnswer,setShowAnswer]=useState(false);const[submissionResult,setSubmissionResult]=useState(null);const[countdownActive,setCountdownActive]=useState(false);const navigate=useNavigate();const{state,actions}=useNewGameContext();const{room,questions,gameState,currentQuestionIndex,players,gameSettings,phaseStartedAt,phaseDuration,paused}=state;const currentQuestion=gameState==='playing'||gameState==='showingAnswer'?questions[currentQuestionIndex]||null:null;const currentQuestionId=(currentQuestion===null||currentQuestion===void 0?void 0:currentQuestion.id)||null;const getBackgroundColor=colorName=>{const colorMap={Black:'#262e33',Brown:'#8B4513',Red:'#C93305',Blue01:'#65C9FF',Blue02:'#5199E4',Blue03:'#25557C',Gray01:'#E6E6E6',Gray02:'#929598',Heather:'#3C4F5C',PastelBlue:'#B1E2FF',PastelGreen:'#A7FFC4',PastelOrange:'#FFDEB5',PastelRed:'#FFAFB9',PastelYellow:'#FFFFB1',Pink:'#FF488E',White:'#FFFFFF'};return colorMap[colorName]||'#B1E2FF';};const player=currentPlayer?players.find(p=>p.id===currentPlayer.id):null;const myScore=player?player.score:0;const teamScore=player?player.team?players.filter(p=>p.team===player.team).reduce((s,p)=>s+(p.score||0),0):player.score:0;useEffect(()=>{// 로컬 스토리지에서 현재 플레이어 데이터 로드\nconst storedPlayer=localStorage.getItem('currentPlayer');if(storedPlayer){setCurrentPlayer(JSON.parse(storedPlayer));}else{// 플레이어 데이터가 없으면 메인으로 리다이렉트\nnavigate('/');return;}},[navigate]);const prevGameStateRef=useRef(null);const prevQuestionIdRef=useRef(null);useEffect(()=>{const prevGameState=prevGameStateRef.current;const prevQuestionId=prevQuestionIdRef.current;const questionId=(currentQuestion===null||currentQuestion===void 0?void 0:currentQuestion.id)||null;// 전이 감지: 상태/문제 변경시에만 타이머/표시 초기화\nconst enteredPlaying=gameState==='playing'&&prevGameState!=='playing';const questionChanged=questionId&&questionId!==prevQuestionId;const enteredAnswer=gameState==='showingAnswer'&&prevGameState!=='showingAnswer';if((enteredPlaying||questionChanged)&&currentQuestion){setTimeLeft(gameSettings.timeLimit);setShowAnswer(false);// 새 문제로 바뀔 때만 입력/결과 초기화\nif(questionChanged){setSelectedAnswer('');setSubmissionResult(null);}setCountdownActive(true);}else if(enteredAnswer){setTimeLeft(gameSettings.answerRevealTime);setShowAnswer(true);setCountdownActive(true);// 정답 공개 시 내 정답 정오 표시\nif(player&&currentQuestion){const correct=currentQuestion.type==='multiple'?String(currentQuestion.correctAnswer)===String(player.currentAnswer):String(currentQuestion.correctAnswer).toString().trim()===String(player.currentAnswer||'').trim();setSubmissionResult(correct?'correct':'incorrect');}}else if(gameState==='waiting'){setTimeLeft(0);setShowAnswer(false);setCountdownActive(false);}else if(gameState==='finished'){setTimeLeft(0);setShowAnswer(false);setCountdownActive(false);}prevGameStateRef.current=gameState;prevQuestionIdRef.current=questionId;},[gameState,currentQuestion,gameSettings.timeLimit,gameSettings.answerRevealTime]);// 플레이어 저장된 답안과 입력값 동기화(문제 제시 중에만)\nuseEffect(()=>{if(gameState==='playing'&&player&&typeof player.currentAnswer!=='undefined'){setSelectedAnswer(player.currentAnswer);}},[gameState,player]);useEffect(()=>{// 서버/브로드캐스트 기준 남은 시간 계산\nif((gameState==='playing'||gameState==='showingAnswer')&&phaseStartedAt&&phaseDuration&&!paused){const elapsed=Math.floor((Date.now()-phaseStartedAt)/1000);const remain=Math.max(0,(phaseDuration||0)-elapsed);setTimeLeft(remain);setCountdownActive(true);}},[gameState,phaseStartedAt,phaseDuration,paused]);useEffect(()=>{if(!countdownActive)return;if(!(gameState==='playing'||gameState==='showingAnswer'))return;if(paused)return;const timer=setInterval(()=>{setTimeLeft(prev=>Math.max(0,prev-1));},1000);return()=>clearInterval(timer);},[countdownActive,gameState,paused]);const mountedAtRef=useRef(Date.now());useEffect(()=>{if(!(gameState==='playing'||gameState==='showingAnswer'))return;if(timeLeft>0)return;const mountedForMs=Date.now()-mountedAtRef.current;if(mountedForMs<1500)return;// 서버 기준 만료 검증\nconst expired=!!(phaseStartedAt&&phaseDuration&&(Date.now()-phaseStartedAt)/1000>=phaseDuration);if(!expired)return;setCountdownActive(false);if(gameState==='playing'){if(player&&!player.hasSubmitted&&currentPlayer){const answer=selectedAnswer!==''?selectedAnswer:(currentQuestion===null||currentQuestion===void 0?void 0:currentQuestion.type)==='short'?'':selectedAnswer;actions.submitAnswer(currentPlayer.id,answer!==null&&answer!==void 0?answer:'');}}},[timeLeft,gameState,player,currentPlayer,selectedAnswer,currentQuestion,actions,phaseStartedAt,phaseDuration]);// 시간 추가/감소 동기화 수신\nuseEffect(()=>{var _addEventListener,_ref;const handler=delta=>setTimeLeft(prev=>Math.max(0,prev+(Number(delta)||0)));(_addEventListener=(_ref=syncManager).addEventListener)===null||_addEventListener===void 0?void 0:_addEventListener.call(_ref,'ADJUST_TIME',handler);return()=>{try{var _removeEventListener,_ref2;(_removeEventListener=(_ref2=syncManager).removeEventListener)===null||_removeEventListener===void 0?void 0:_removeEventListener.call(_ref2,'ADJUST_TIME',handler);}catch(_unused){}};},[]);// 정오 결과 브로드캐스트 수신 → 안전망으로 재계산 및 표시\nuseEffect(()=>{var _addEventListener2,_ref3;const finalize=payload=>{if(!currentQuestion||(payload===null||payload===void 0?void 0:payload.questionId)!==currentQuestion.id||!player)return;const correct=currentQuestion.type==='multiple'?String(currentQuestion.correctAnswer)===String(player.currentAnswer):String(currentQuestion.correctAnswer).toString().trim()===String(player.currentAnswer||'').trim();setSubmissionResult(correct?'correct':'incorrect');};(_addEventListener2=(_ref3=syncManager).addEventListener)===null||_addEventListener2===void 0?void 0:_addEventListener2.call(_ref3,'FINALIZE_ANSWERS',finalize);return()=>{try{var _removeEventListener2,_ref4;(_removeEventListener2=(_ref4=syncManager).removeEventListener)===null||_removeEventListener2===void 0?void 0:_removeEventListener2.call(_ref4,'FINALIZE_ANSWERS',finalize);}catch(_unused2){}};},[currentQuestion,player]);const handleAnswerSelect=answer=>{if(!player||player.isEliminated)return;setSelectedAnswer(answer);if(currentPlayer){var _actions$setAnswerDra;(_actions$setAnswerDra=actions.setAnswerDraft)===null||_actions$setAnswerDra===void 0?void 0:_actions$setAnswerDra.call(actions,currentPlayer.id,answer);}};const handleSubmit=()=>{// 수동 제출 버튼은 보조 수단(자동 제출이 기본)\nif(!player||!currentPlayer||player.hasSubmitted||player.isEliminated||gameState!=='playing')return;const answer=selectedAnswer!==''?selectedAnswer:(currentQuestion===null||currentQuestion===void 0?void 0:currentQuestion.type)==='short'?'':selectedAnswer;actions.submitAnswer(currentPlayer.id,answer!==null&&answer!==void 0?answer:'');};const handleCancelSubmission=()=>{var _cancelSubmission,_ref5;if(!player||!currentPlayer||gameState!=='playing')return;// 제출 취소 (새 컨텍스트 액션)\n(_cancelSubmission=(_ref5=actions).cancelSubmission)===null||_cancelSubmission===void 0?void 0:_cancelSubmission.call(_ref5,currentPlayer.id);setSelectedAnswer('');setSubmissionResult(null);};const formatTime=seconds=>{const mins=Math.floor(seconds/60);const secs=seconds%60;return\"\".concat(mins,\":\").concat(secs.toString().padStart(2,'0'));};const getAnswerButtonClass=(answer,index)=>{let baseClass='answer-button';if(selectedAnswer===answer||selectedAnswer===index){baseClass+=' selected';}if(showAnswer&&currentQuestion){if(currentQuestion.correctAnswer===answer||currentQuestion.correctAnswer===index){baseClass+=' correct';}else if((selectedAnswer===answer||selectedAnswer===index)&&submissionResult==='incorrect'){baseClass+=' incorrect';}}return baseClass;};if(!currentPlayer){return/*#__PURE__*/_jsx(\"div\",{className:\"game-player loading\",children:\"\\uD50C\\uB808\\uC774\\uC5B4 \\uC815\\uBCF4\\uB97C \\uB85C\\uB529 \\uC911...\"});}// 방에 참여하지 않은 경우 (room이 없거나 플레이어가 목록에 없음)\nif(!room||!player){return/*#__PURE__*/_jsxs(\"div\",{className:\"game-player loading\",children:[/*#__PURE__*/_jsx(\"div\",{children:\"\\uBC29\\uC5D0 \\uC5F0\\uACB0 \\uC911...\"}),/*#__PURE__*/_jsx(\"div\",{children:\"\\uC7A0\\uC2DC\\uB9CC \\uAE30\\uB2E4\\uB824\\uC8FC\\uC138\\uC694\"})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"game-player\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"player-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"player-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"player-details\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"nickname\",children:player.nickname}),player.team&&/*#__PURE__*/_jsxs(\"span\",{className:\"team-info\",children:[player.team,\"\\uD300\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"player-score\",children:[\"\\uC810\\uC218: \",player.score,\"\\uC810\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"game-timer\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"timer \".concat(timeLeft<=5?'warning':''),children:[\"\\u23F1\\uFE0F \",formatTime(timeLeft)]})})]}),/*#__PURE__*/_jsx(\"main\",{className:\"player-main\",children:/*#__PURE__*/_jsx(\"div\",{className:\"question-section\",children:gameState==='finished'?/*#__PURE__*/_jsx(\"div\",{className:\"waiting-screen\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"waiting-content\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uCD95\\uD558\\uD569\\uB2C8\\uB2E4!\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uB2F9\\uC2E0\\uC758 \\uC810\\uC218\\uB294 \\uCD1D \",/*#__PURE__*/_jsx(\"strong\",{children:myScore}),\"\\uC810 \\uC785\\uB2C8\\uB2E4.\"]}),player!==null&&player!==void 0&&player.team?/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uB2F9\\uC2E0\\uC758 \\uD300 \\uC810\\uC218\\uB294 \\uCD1D \",/*#__PURE__*/_jsx(\"strong\",{children:teamScore}),\"\\uC810 \\uC785\\uB2C8\\uB2E4.\"]}):/*#__PURE__*/_jsx(\"p\",{children:\"\\uAC1C\\uC778\\uC804\\uC73C\\uB85C \\uC9C4\\uD589\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"})]})}):gameState==='waiting'?/*#__PURE__*/_jsx(\"div\",{className:\"waiting-screen\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"waiting-content\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uB300\\uAE30\\uC911\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\uBB38\\uC81C\\uAC00 \\uC2DC\\uC791\\uB420 \\uB54C\\uAE4C\\uC9C0 \\uAE30\\uB2E4\\uB824\\uC8FC\\uC138\\uC694\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"waiting-animation\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"dot\"}),/*#__PURE__*/_jsx(\"div\",{className:\"dot\"}),/*#__PURE__*/_jsx(\"div\",{className:\"dot\"})]})]})}):currentQuestion?/*#__PURE__*/_jsxs(\"div\",{className:\"question-display\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"question-header\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"question-type\",children:currentQuestion.type==='ox'?'OX 문제':currentQuestion.type==='multiple'?'객관식':'주관식'}),/*#__PURE__*/_jsxs(\"span\",{className:\"question-score\",children:[currentQuestion.score,\"\\uC810\"]})]}),/*#__PURE__*/_jsx(\"h2\",{className:\"question-text\",children:currentQuestion.question}),showAnswer&&/*#__PURE__*/_jsx(\"div\",{className:\"result-indicator \".concat(submissionResult||''),children:submissionResult==='correct'?'정답입니다! 🎉':submissionResult==='incorrect'?'오답입니다 😔':'정답 공개'}),player.isEliminated&&/*#__PURE__*/_jsxs(\"div\",{className:\"elimination-notice\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD0C8\\uB77D\\uD558\\uC600\\uC2B5\\uB2C8\\uB2E4\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\uAC8C\\uC784\\uC744 \\uAD00\\uC804\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4\"})]})]}):null})}),/*#__PURE__*/_jsx(\"footer\",{className:\"player-footer\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"answer-section\",children:[currentQuestion&&gameState==='playing'&&/*#__PURE__*/_jsxs(_Fragment,{children:[currentQuestion.type==='ox'&&/*#__PURE__*/_jsxs(\"div\",{className:\"ox-answers\",children:[/*#__PURE__*/_jsx(\"button\",{className:getAnswerButtonClass('O'),onClick:()=>handleAnswerSelect('O'),disabled:player.hasSubmitted||player.isEliminated,children:\"O (\\uCC38)\"}),/*#__PURE__*/_jsx(\"button\",{className:getAnswerButtonClass('X'),onClick:()=>handleAnswerSelect('X'),disabled:player.hasSubmitted||player.isEliminated,children:\"X (\\uAC70\\uC9D3)\"})]}),currentQuestion.type==='multiple'&&currentQuestion.options&&/*#__PURE__*/_jsx(\"div\",{className:\"multiple-answers\",children:currentQuestion.options.map((option,index)=>/*#__PURE__*/_jsxs(\"button\",{className:getAnswerButtonClass(option,index),onClick:()=>handleAnswerSelect(index),disabled:player.hasSubmitted||player.isEliminated,children:[/*#__PURE__*/_jsx(\"span\",{className:\"option-number\",children:index+1}),/*#__PURE__*/_jsx(\"span\",{className:\"option-text\",children:option})]},index))}),currentQuestion.type==='short'&&/*#__PURE__*/_jsx(\"div\",{className:\"short-answer\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:selectedAnswer,onChange:e=>handleAnswerSelect(e.target.value),placeholder:\"\\uC815\\uB2F5\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",disabled:player.hasSubmitted||player.isEliminated,className:\"short-input\"})})]}),gameState==='showingAnswer'&&showAnswer&&currentQuestion&&/*#__PURE__*/_jsxs(\"div\",{className:\"answer-reveal\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uC815\\uB2F5\"}),currentQuestion.type==='ox'&&/*#__PURE__*/_jsxs(\"div\",{className:\"revealed-answer\",children:[currentQuestion.correctAnswer,\" (\",currentQuestion.correctAnswer==='O'?'참':'거짓',\")\"]}),currentQuestion.type==='multiple'&&currentQuestion.options&&/*#__PURE__*/_jsx(\"div\",{className:\"revealed-answer\",children:currentQuestion.options[currentQuestion.correctAnswer]}),currentQuestion.type==='short'&&/*#__PURE__*/_jsx(\"div\",{className:\"revealed-answer\",children:currentQuestion.correctAnswer})]}),gameState==='waiting'&&/*#__PURE__*/_jsx(\"div\",{className:\"waiting-footer\",children:/*#__PURE__*/_jsx(\"p\",{children:\"\\uAC8C\\uC784\\uC774 \\uACE7 \\uC2DC\\uC791\\uB429\\uB2C8\\uB2E4...\"})})]})}),/*#__PURE__*/_jsxs(\"div\",{style:{position:'fixed',right:12,bottom:12,borderRadius:12,padding:0,color:'#fff',display:'flex',flexDirection:'column',alignItems:'center',gap:6},children:[/*#__PURE__*/_jsx(\"div\",{style:{width:80,height:80,borderRadius:'50%',overflow:'hidden',background:getBackgroundColor(((_player$avatar=player.avatar)===null||_player$avatar===void 0?void 0:_player$avatar.backgroundColor)||'PastelBlue'),display:'flex',alignItems:'center',justifyContent:'center'},children:/*#__PURE__*/_jsx(Avatar,{style:{width:70,height:70},avatarStyle:\"Transparent\",topType:((_player$avatar2=player.avatar)===null||_player$avatar2===void 0?void 0:_player$avatar2.topType)||'ShortHairShortFlat',accessoriesType:((_player$avatar3=player.avatar)===null||_player$avatar3===void 0?void 0:_player$avatar3.accessoriesType)||'Blank',hairColor:((_player$avatar4=player.avatar)===null||_player$avatar4===void 0?void 0:_player$avatar4.hairColor)||'BrownDark',facialHairType:\"Blank\",facialHairColor:\"BrownDark\",clotheType:\"ShirtCrewNeck\",clotheColor:((_player$avatar5=player.avatar)===null||_player$avatar5===void 0?void 0:_player$avatar5.clotheColor)||'Blue01',eyeType:((_player$avatar6=player.avatar)===null||_player$avatar6===void 0?void 0:_player$avatar6.eyeType)||'Happy',eyebrowType:((_player$avatar7=player.avatar)===null||_player$avatar7===void 0?void 0:_player$avatar7.eyebrowType)||'Default',mouthType:((_player$avatar8=player.avatar)===null||_player$avatar8===void 0?void 0:_player$avatar8.mouthType)||'Smile',skinColor:((_player$avatar9=player.avatar)===null||_player$avatar9===void 0?void 0:_player$avatar9.skinColor)||'Light'})}),/*#__PURE__*/_jsx(\"span\",{style:{fontWeight:700,color:'#fff',textShadow:'0 1px 2px rgba(0,0,0,0.4)'},children:player.nickname})]})]});};export default GamePlayer;","map":{"version":3,"names":["React","useState","useEffect","useRef","Avatar","useNavigate","syncManager","useNewGameContext","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","GamePlayer","_player$avatar","_player$avatar2","_player$avatar3","_player$avatar4","_player$avatar5","_player$avatar6","_player$avatar7","_player$avatar8","_player$avatar9","currentPlayer","setCurrentPlayer","timeLeft","setTimeLeft","selectedAnswer","setSelectedAnswer","showAnswer","setShowAnswer","submissionResult","setSubmissionResult","countdownActive","setCountdownActive","navigate","state","actions","room","questions","gameState","currentQuestionIndex","players","gameSettings","phaseStartedAt","phaseDuration","paused","currentQuestion","currentQuestionId","id","getBackgroundColor","colorName","colorMap","Black","Brown","Red","Blue01","Blue02","Blue03","Gray01","Gray02","Heather","PastelBlue","PastelGreen","PastelOrange","PastelRed","PastelYellow","Pink","White","player","find","p","myScore","score","teamScore","team","filter","reduce","s","storedPlayer","localStorage","getItem","JSON","parse","prevGameStateRef","prevQuestionIdRef","prevGameState","current","prevQuestionId","questionId","enteredPlaying","questionChanged","enteredAnswer","timeLimit","answerRevealTime","correct","type","String","correctAnswer","currentAnswer","toString","trim","elapsed","Math","floor","Date","now","remain","max","timer","setInterval","prev","clearInterval","mountedAtRef","mountedForMs","expired","hasSubmitted","answer","submitAnswer","_addEventListener","_ref","handler","delta","Number","addEventListener","call","_removeEventListener","_ref2","removeEventListener","_unused","_addEventListener2","_ref3","finalize","payload","_removeEventListener2","_ref4","_unused2","handleAnswerSelect","isEliminated","_actions$setAnswerDra","setAnswerDraft","handleSubmit","handleCancelSubmission","_cancelSubmission","_ref5","cancelSubmission","formatTime","seconds","mins","secs","concat","padStart","getAnswerButtonClass","index","baseClass","className","children","nickname","question","onClick","disabled","options","map","option","value","onChange","e","target","placeholder","style","position","right","bottom","borderRadius","padding","color","display","flexDirection","alignItems","gap","width","height","overflow","background","avatar","backgroundColor","justifyContent","avatarStyle","topType","accessoriesType","hairColor","facialHairType","facialHairColor","clotheType","clotheColor","eyeType","eyebrowType","mouthType","skinColor","fontWeight","textShadow"],"sources":["C:/Users/9204r/.cursor/avatar/src/components/GamePlayer.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport Avatar from 'avataaars2';\nimport { useNavigate } from 'react-router-dom';\nimport { Question, Player } from '../types/game';\nimport syncManager from '../services/SyncManager';\nimport { useNewGameContext } from '../contexts/NewGameContext';\nimport './GamePlayer.css';\n\nconst GamePlayer: React.FC = () => {\n  const [currentPlayer, setCurrentPlayer] = useState<Player | null>(null);\n  const [timeLeft, setTimeLeft] = useState<number>(0);\n  const [selectedAnswer, setSelectedAnswer] = useState<string | number>('');\n  const [showAnswer, setShowAnswer] = useState(false);\n  const [submissionResult, setSubmissionResult] = useState<'correct' | 'incorrect' | null>(null);\n  const [countdownActive, setCountdownActive] = useState(false);\n  const navigate = useNavigate();\n  \n  const { state, actions } = useNewGameContext();\n  const { room, questions, gameState, currentQuestionIndex, players, gameSettings, phaseStartedAt, phaseDuration, paused } = state;\n  \n  const currentQuestion = (gameState === 'playing' || gameState === 'showingAnswer') ? (questions[currentQuestionIndex] || null) : null;\n  const currentQuestionId = currentQuestion?.id || null;\n\n  const getBackgroundColor = (colorName: string): string => {\n    const colorMap: { [key: string]: string } = {\n      Black: '#262e33', Brown: '#8B4513', Red: '#C93305',\n      Blue01: '#65C9FF', Blue02: '#5199E4', Blue03: '#25557C',\n      Gray01: '#E6E6E6', Gray02: '#929598', Heather: '#3C4F5C',\n      PastelBlue: '#B1E2FF', PastelGreen: '#A7FFC4', PastelOrange: '#FFDEB5',\n      PastelRed: '#FFAFB9', PastelYellow: '#FFFFB1', Pink: '#FF488E', White: '#FFFFFF'\n    };\n    return colorMap[colorName] || '#B1E2FF';\n  };\n  const player = currentPlayer ? players.find(p => p.id === currentPlayer.id) : null;\n  const myScore = player ? player.score : 0;\n  const teamScore = player ? (player.team ? players.filter(p => p.team === player.team).reduce((s, p) => s + (p.score || 0), 0) : player.score) : 0;\n\n  useEffect(() => {\n    // 로컬 스토리지에서 현재 플레이어 데이터 로드\n    const storedPlayer = localStorage.getItem('currentPlayer');\n    if (storedPlayer) {\n      setCurrentPlayer(JSON.parse(storedPlayer));\n    } else {\n      // 플레이어 데이터가 없으면 메인으로 리다이렉트\n      navigate('/');\n      return;\n    }\n  }, [navigate]);\n\n  const prevGameStateRef = useRef<string | null>(null);\n  const prevQuestionIdRef = useRef<string | null>(null);\n\n  useEffect(() => {\n    const prevGameState = prevGameStateRef.current;\n    const prevQuestionId = prevQuestionIdRef.current;\n    const questionId = currentQuestion?.id || null;\n\n    // 전이 감지: 상태/문제 변경시에만 타이머/표시 초기화\n    const enteredPlaying = gameState === 'playing' && prevGameState !== 'playing';\n    const questionChanged = questionId && questionId !== prevQuestionId;\n    const enteredAnswer = gameState === 'showingAnswer' && prevGameState !== 'showingAnswer';\n\n    if ((enteredPlaying || questionChanged) && currentQuestion) {\n      setTimeLeft(gameSettings.timeLimit);\n      setShowAnswer(false);\n      // 새 문제로 바뀔 때만 입력/결과 초기화\n      if (questionChanged) {\n        setSelectedAnswer('');\n        setSubmissionResult(null);\n      }\n      setCountdownActive(true);\n    } else if (enteredAnswer) {\n      setTimeLeft(gameSettings.answerRevealTime);\n      setShowAnswer(true);\n      setCountdownActive(true);\n      // 정답 공개 시 내 정답 정오 표시\n      if (player && currentQuestion) {\n        const correct = currentQuestion.type === 'multiple'\n          ? String(currentQuestion.correctAnswer) === String(player.currentAnswer)\n          : String(currentQuestion.correctAnswer).toString().trim() === String((player.currentAnswer || '')).trim();\n        setSubmissionResult(correct ? 'correct' : 'incorrect');\n      }\n    } else if (gameState === 'waiting') {\n      setTimeLeft(0);\n      setShowAnswer(false);\n      setCountdownActive(false);\n    } else if (gameState === 'finished') {\n      setTimeLeft(0);\n      setShowAnswer(false);\n      setCountdownActive(false);\n    }\n\n    prevGameStateRef.current = gameState;\n    prevQuestionIdRef.current = questionId;\n  }, [gameState, currentQuestion, gameSettings.timeLimit, gameSettings.answerRevealTime]);\n\n  // 플레이어 저장된 답안과 입력값 동기화(문제 제시 중에만)\n  useEffect(() => {\n    if (gameState === 'playing' && player && typeof player.currentAnswer !== 'undefined') {\n      setSelectedAnswer(player.currentAnswer);\n    }\n  }, [gameState, player]);\n\n  useEffect(() => {\n    // 서버/브로드캐스트 기준 남은 시간 계산\n    if ((gameState === 'playing' || gameState === 'showingAnswer') && phaseStartedAt && phaseDuration && !paused) {\n      const elapsed = Math.floor((Date.now() - phaseStartedAt) / 1000);\n      const remain = Math.max(0, (phaseDuration || 0) - elapsed);\n      setTimeLeft(remain);\n      setCountdownActive(true);\n    }\n  }, [gameState, phaseStartedAt, phaseDuration, paused]);\n\n  useEffect(() => {\n    if (!countdownActive) return;\n    if (!(gameState === 'playing' || gameState === 'showingAnswer')) return;\n    if (paused) return;\n    const timer = setInterval(() => {\n      setTimeLeft(prev => Math.max(0, prev - 1));\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [countdownActive, gameState, paused]);\n\n  const mountedAtRef = useRef<number>(Date.now());\n  useEffect(() => {\n    if (!(gameState === 'playing' || gameState === 'showingAnswer')) return;\n    if (timeLeft > 0) return;\n    const mountedForMs = Date.now() - mountedAtRef.current;\n    if (mountedForMs < 1500) return;\n    // 서버 기준 만료 검증\n    const expired = !!(phaseStartedAt && phaseDuration && (Date.now() - phaseStartedAt) / 1000 >= phaseDuration);\n    if (!expired) return;\n    setCountdownActive(false);\n    if (gameState === 'playing') {\n      if (player && !player.hasSubmitted && currentPlayer) {\n        const answer = selectedAnswer !== '' ? selectedAnswer : (currentQuestion?.type === 'short' ? '' : selectedAnswer);\n        actions.submitAnswer(currentPlayer.id, answer ?? '');\n      }\n    }\n  }, [timeLeft, gameState, player, currentPlayer, selectedAnswer, currentQuestion, actions, phaseStartedAt, phaseDuration]);\n\n  // 시간 추가/감소 동기화 수신\n  useEffect(() => {\n    const handler = (delta: number) => setTimeLeft(prev => Math.max(0, prev + (Number(delta) || 0)));\n    (syncManager as any).addEventListener?.('ADJUST_TIME', handler);\n    return () => {\n      try { (syncManager as any).removeEventListener?.('ADJUST_TIME', handler); } catch {}\n    };\n  }, []);\n\n  // 정오 결과 브로드캐스트 수신 → 안전망으로 재계산 및 표시\n  useEffect(() => {\n    const finalize = (payload: any) => {\n      if (!currentQuestion || payload?.questionId !== currentQuestion.id || !player) return;\n      const correct = currentQuestion.type === 'multiple'\n        ? String(currentQuestion.correctAnswer) === String(player.currentAnswer)\n        : String(currentQuestion.correctAnswer).toString().trim() === String((player.currentAnswer || '')).trim();\n      setSubmissionResult(correct ? 'correct' : 'incorrect');\n    };\n    (syncManager as any).addEventListener?.('FINALIZE_ANSWERS', finalize);\n    return () => {\n      try { (syncManager as any).removeEventListener?.('FINALIZE_ANSWERS', finalize); } catch {}\n    };\n  }, [currentQuestion, player]);\n\n  const handleAnswerSelect = (answer: string | number) => {\n    if (!player || player.isEliminated) return;\n    setSelectedAnswer(answer);\n    if (currentPlayer) {\n      actions.setAnswerDraft?.(currentPlayer.id, answer);\n    }\n  };\n\n  const handleSubmit = () => {\n    // 수동 제출 버튼은 보조 수단(자동 제출이 기본)\n    if (!player || !currentPlayer || player.hasSubmitted || player.isEliminated || gameState !== 'playing') return;\n    const answer = selectedAnswer !== '' ? selectedAnswer : (currentQuestion?.type === 'short' ? '' : selectedAnswer);\n    actions.submitAnswer(currentPlayer.id, answer ?? '');\n  };\n\n  const handleCancelSubmission = () => {\n    if (!player || !currentPlayer || gameState !== 'playing') return;\n    \n    // 제출 취소 (새 컨텍스트 액션)\n    (actions as any).cancelSubmission?.(currentPlayer.id);\n    \n    setSelectedAnswer('');\n    setSubmissionResult(null);\n  };\n\n  const formatTime = (seconds: number): string => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const getAnswerButtonClass = (answer: string | number, index?: number): string => {\n    let baseClass = 'answer-button';\n    \n    if (selectedAnswer === answer || selectedAnswer === index) {\n      baseClass += ' selected';\n    }\n    \n    if (showAnswer && currentQuestion) {\n      if (currentQuestion.correctAnswer === answer || currentQuestion.correctAnswer === index) {\n        baseClass += ' correct';\n      } else if ((selectedAnswer === answer || selectedAnswer === index) && submissionResult === 'incorrect') {\n        baseClass += ' incorrect';\n      }\n    }\n    \n    return baseClass;\n  };\n\n  if (!currentPlayer) {\n    return <div className=\"game-player loading\">플레이어 정보를 로딩 중...</div>;\n  }\n\n  // 방에 참여하지 않은 경우 (room이 없거나 플레이어가 목록에 없음)\n  if (!room || !player) {\n    return (\n      <div className=\"game-player loading\">\n        <div>방에 연결 중...</div>\n        <div>잠시만 기다려주세요</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"game-player\">\n      <header className=\"player-header\">\n        <div className=\"player-info\">\n          <div className=\"player-details\">\n            <span className=\"nickname\">{player.nickname}</span>\n            {player.team && (\n              <span className=\"team-info\">{player.team}팀</span>\n            )}\n          </div>\n          <div className=\"player-score\">\n            점수: {player.score}점\n          </div>\n        </div>\n        \n        <div className=\"game-timer\">\n          <div className={`timer ${timeLeft <= 5 ? 'warning' : ''}`}>\n            ⏱️ {formatTime(timeLeft)}\n          </div>\n        </div>\n      </header>\n\n      <main className=\"player-main\">\n        <div className=\"question-section\">\n          {gameState === 'finished' ? (\n            <div className=\"waiting-screen\">\n              <div className=\"waiting-content\">\n                <h2>축하합니다!</h2>\n                <p>당신의 점수는 총 <strong>{myScore}</strong>점 입니다.</p>\n                {player?.team ? (\n                  <p>당신의 팀 점수는 총 <strong>{teamScore}</strong>점 입니다.</p>\n                ) : (\n                  <p>개인전으로 진행되었습니다.</p>\n                )}\n              </div>\n            </div>\n          ) : gameState === 'waiting' ? (\n            <div className=\"waiting-screen\">\n              <div className=\"waiting-content\">\n                <h2>대기중</h2>\n                <p>문제가 시작될 때까지 기다려주세요</p>\n                <div className=\"waiting-animation\">\n                  <div className=\"dot\"></div>\n                  <div className=\"dot\"></div>\n                  <div className=\"dot\"></div>\n                </div>\n              </div>\n            </div>\n          ) : currentQuestion ? (\n            <div className=\"question-display\">\n              <div className=\"question-header\">\n                <span className=\"question-type\">\n                  {currentQuestion.type === 'ox' ? 'OX 문제' :\n                   currentQuestion.type === 'multiple' ? '객관식' : '주관식'}\n                </span>\n                <span className=\"question-score\">{currentQuestion.score}점</span>\n              </div>\n              \n              <h2 className=\"question-text\">{currentQuestion.question}</h2>\n              \n              {showAnswer && (\n                <div className={`result-indicator ${submissionResult || ''}`}>\n                  {submissionResult === 'correct' ? '정답입니다! 🎉' : submissionResult === 'incorrect' ? '오답입니다 😔' : '정답 공개'}\n                </div>\n              )}\n              \n              {player.isEliminated && (\n                <div className=\"elimination-notice\">\n                  <h3>탈락하였습니다</h3>\n                  <p>게임을 관전할 수 있습니다</p>\n                </div>\n              )}\n            </div>\n          ) : null}\n        </div>\n      </main>\n\n      <footer className=\"player-footer\">\n        <div className=\"answer-section\">\n          {currentQuestion && gameState === 'playing' && (\n            <>\n              {currentQuestion.type === 'ox' && (\n                <div className=\"ox-answers\">\n                  <button \n                    className={getAnswerButtonClass('O')}\n                    onClick={() => handleAnswerSelect('O')}\n                    disabled={player.hasSubmitted || player.isEliminated}\n                  >\n                    O (참)\n                  </button>\n                  <button \n                    className={getAnswerButtonClass('X')}\n                    onClick={() => handleAnswerSelect('X')}\n                    disabled={player.hasSubmitted || player.isEliminated}\n                  >\n                    X (거짓)\n                  </button>\n                </div>\n              )}\n              \n              {currentQuestion.type === 'multiple' && currentQuestion.options && (\n                <div className=\"multiple-answers\">\n                  {currentQuestion.options.map((option, index) => (\n                    <button\n                      key={index}\n                      className={getAnswerButtonClass(option, index)}\n                      onClick={() => handleAnswerSelect(index)}\n                      disabled={player.hasSubmitted || player.isEliminated}\n                    >\n                      <span className=\"option-number\">{index + 1}</span>\n                      <span className=\"option-text\">{option}</span>\n                    </button>\n                  ))}\n                </div>\n              )}\n              \n              {currentQuestion.type === 'short' && (\n                <div className=\"short-answer\">\n                  <input\n                    type=\"text\"\n                    value={selectedAnswer as string}\n                    onChange={(e) => handleAnswerSelect(e.target.value)}\n                    placeholder=\"정답을 입력하세요\"\n                    disabled={player.hasSubmitted || player.isEliminated}\n                    className=\"short-input\"\n                  />\n                </div>\n              )}\n              \n              {/* 제출 버튼 제거: 타이머 종료 시 자동 제출 */}\n            </>\n          )}\n          \n          {gameState === 'showingAnswer' && showAnswer && currentQuestion && (\n            <div className=\"answer-reveal\">\n              <h3>정답</h3>\n              {currentQuestion.type === 'ox' && (\n                <div className=\"revealed-answer\">\n                  {currentQuestion.correctAnswer} ({currentQuestion.correctAnswer === 'O' ? '참' : '거짓'})\n                </div>\n              )}\n              {currentQuestion.type === 'multiple' && currentQuestion.options && (\n                <div className=\"revealed-answer\">\n                  {currentQuestion.options[currentQuestion.correctAnswer as number]}\n                </div>\n              )}\n              {currentQuestion.type === 'short' && (\n                <div className=\"revealed-answer\">\n                  {currentQuestion.correctAnswer}\n                </div>\n              )}\n            </div>\n          )}\n          \n          {gameState === 'waiting' && (\n            <div className=\"waiting-footer\">\n              <p>게임이 곧 시작됩니다...</p>\n            </div>\n          )}\n        </div>\n      </footer>\n\n      {/* 우측 하단 내 아바타 미리보기 */}\n      <div style={{ position: 'fixed', right: 12, bottom: 12, borderRadius: 12, padding: 0, color: '#fff', display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 6 }}>\n        <div style={{ width: 80, height: 80, borderRadius: '50%', overflow: 'hidden', background: getBackgroundColor(player.avatar?.backgroundColor || 'PastelBlue'), display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n          <Avatar\n            style={{ width: 70, height: 70 }}\n            avatarStyle=\"Transparent\"\n            topType={player.avatar?.topType || 'ShortHairShortFlat'}\n            accessoriesType={player.avatar?.accessoriesType || 'Blank'}\n            hairColor={player.avatar?.hairColor || 'BrownDark'}\n            facialHairType=\"Blank\"\n            facialHairColor=\"BrownDark\"\n            clotheType=\"ShirtCrewNeck\"\n            clotheColor={player.avatar?.clotheColor || 'Blue01'}\n            eyeType={player.avatar?.eyeType || 'Happy'}\n            eyebrowType={player.avatar?.eyebrowType || 'Default'}\n            mouthType={player.avatar?.mouthType || 'Smile'}\n            skinColor={player.avatar?.skinColor || 'Light'}\n          />\n        </div>\n        <span style={{ fontWeight: 700, color: '#fff', textShadow: '0 1px 2px rgba(0,0,0,0.4)' }}>{player.nickname}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default GamePlayer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}