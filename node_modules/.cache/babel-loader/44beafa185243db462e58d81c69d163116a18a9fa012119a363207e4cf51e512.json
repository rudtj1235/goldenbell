{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\9204r\\\\.cursor\\\\avatar\\\\src\\\\components\\\\AvatarOptionSelector.tsx\";\nimport React from 'react';\nimport './AvatarOptionSelector.css';\nimport { getKoreanLabel } from '../utils/labelUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvatarOptionSelector = ({\n  label,\n  options,\n  value,\n  onChange,\n  isColor = false\n}) => {\n  const getColorMapping = option => {\n    const colorMap = {\n      // 헤어 컬러\n      'Auburn': '#A55728',\n      'Black': '#2C1B18',\n      'Blonde': '#F8E71C',\n      'BlondeGolden': '#D2B356',\n      'Brown': '#724133',\n      'BrownDark': '#4A312C',\n      'PastelPink': '#F59797',\n      'Platinum': '#ECDCBF',\n      'Red': '#C93305',\n      'SilverGray': '#E8E1E1',\n      // 의상 컬러\n      'Blue01': '#65C9FF',\n      'Blue02': '#5199E4',\n      'Blue03': '#25557C',\n      'Gray01': '#E6E6E6',\n      'Gray02': '#929598',\n      'Heather': '#3C4F5C',\n      'PastelBlue': '#B1E2FF',\n      'PastelGreen': '#A7FFC4',\n      'PastelOrange': '#FFDEB5',\n      'PastelRed': '#FFAFB9',\n      'PastelYellow': '#FFFFB1',\n      'Pink': '#FF488E',\n      'White': '#FFFFFF',\n      // 피부색\n      'Tanned': '#FD9841',\n      'Yellow': '#F8D25C',\n      'Pale': '#FDBCB4',\n      'Light': '#EDB98A',\n      'BrownSkin': '#D08B5B',\n      'DarkBrown': '#AE5D29'\n    };\n    return colorMap[option] || '#000000';\n  };\n  const formatDisplayName = option => {\n    return getKoreanLabel(option);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"option-selector\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"option-label\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options-container\",\n      children: options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `option-button ${value === option ? 'selected' : ''} ${isColor ? 'color-option' : ''}`,\n        onClick: () => onChange(option),\n        style: isColor ? {\n          backgroundColor: getColorMapping(option)\n        } : {},\n        title: formatDisplayName(option),\n        children: isColor ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"color-preview\",\n          style: {\n            backgroundColor: getColorMapping(option)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"option-text\",\n          children: formatDisplayName(option)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this)\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_c = AvatarOptionSelector;\nexport default AvatarOptionSelector;\nvar _c;\n$RefreshReg$(_c, \"AvatarOptionSelector\");","map":{"version":3,"names":["React","getKoreanLabel","jsxDEV","_jsxDEV","AvatarOptionSelector","label","options","value","onChange","isColor","getColorMapping","option","colorMap","formatDisplayName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","style","backgroundColor","title","_c","$RefreshReg$"],"sources":["C:/Users/9204r/.cursor/avatar/src/components/AvatarOptionSelector.tsx"],"sourcesContent":["import React from 'react';\r\nimport './AvatarOptionSelector.css';\r\nimport { getKoreanLabel } from '../utils/labelUtils';\r\n\r\ninterface AvatarOptionSelectorProps {\r\n  label: string;\r\n  options: string[];\r\n  value: string;\r\n  onChange: (value: string) => void;\r\n  isColor?: boolean;\r\n}\r\n\r\nconst AvatarOptionSelector: React.FC<AvatarOptionSelectorProps> = ({\r\n  label,\r\n  options,\r\n  value,\r\n  onChange,\r\n  isColor = false\r\n}) => {\r\n  const getColorMapping = (option: string): string => {\r\n    const colorMap: { [key: string]: string } = {\r\n      // 헤어 컬러\r\n      'Auburn': '#A55728',\r\n      'Black': '#2C1B18',\r\n      'Blonde': '#F8E71C',\r\n      'BlondeGolden': '#D2B356',\r\n      'Brown': '#724133',\r\n      'BrownDark': '#4A312C',\r\n      'PastelPink': '#F59797',\r\n      'Platinum': '#ECDCBF',\r\n      'Red': '#C93305',\r\n      'SilverGray': '#E8E1E1',\r\n      \r\n      // 의상 컬러\r\n      'Blue01': '#65C9FF',\r\n      'Blue02': '#5199E4',\r\n      'Blue03': '#25557C',\r\n      'Gray01': '#E6E6E6',\r\n      'Gray02': '#929598',\r\n      'Heather': '#3C4F5C',\r\n      'PastelBlue': '#B1E2FF',\r\n      'PastelGreen': '#A7FFC4',\r\n      'PastelOrange': '#FFDEB5',\r\n      'PastelRed': '#FFAFB9',\r\n      'PastelYellow': '#FFFFB1',\r\n      'Pink': '#FF488E',\r\n      'White': '#FFFFFF',\r\n      \r\n      // 피부색\r\n      'Tanned': '#FD9841',\r\n      'Yellow': '#F8D25C',\r\n      'Pale': '#FDBCB4',\r\n      'Light': '#EDB98A',\r\n      'BrownSkin': '#D08B5B',\r\n      'DarkBrown': '#AE5D29',\r\n    };\r\n    \r\n    return colorMap[option] || '#000000';\r\n  };\r\n\r\n  const formatDisplayName = (option: string): string => {\r\n    return getKoreanLabel(option);\r\n  };\r\n\r\n  return (\r\n    <div className=\"option-selector\">\r\n      <label className=\"option-label\">{label}</label>\r\n      <div className=\"options-container\">\r\n        {options.map((option) => (\r\n          <button\r\n            key={option}\r\n            className={`option-button ${value === option ? 'selected' : ''} ${isColor ? 'color-option' : ''}`}\r\n            onClick={() => onChange(option)}\r\n            style={isColor ? { backgroundColor: getColorMapping(option) } : {}}\r\n            title={formatDisplayName(option)}\r\n          >\r\n            {isColor ? (\r\n              <span className=\"color-preview\" style={{ backgroundColor: getColorMapping(option) }} />\r\n            ) : (\r\n              <span className=\"option-text\">{formatDisplayName(option)}</span>\r\n            )}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AvatarOptionSelector;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}