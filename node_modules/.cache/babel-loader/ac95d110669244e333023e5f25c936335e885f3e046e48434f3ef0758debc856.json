{"ast":null,"code":"/**\n * 새로운 모듈 기반 메인 페이지\n * RoomManager와 SyncManager를 활용한 실시간 동기화\n */import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import{useNewGameContext}from'../contexts/NewGameContext';import roomManager from'../services/RoomManager';import eventBus from'../services/EventBus';import'./MainPage.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const NewMainPage=()=>{const[activeTab,setActiveTab]=useState('create');const[subject,setSubject]=useState('');const[isPublic,setIsPublic]=useState(false);const[nickname,setNickname]=useState('');const[roomCode,setRoomCode]=useState('');const[publicRooms,setPublicRooms]=useState([]);const[isLoading,setIsLoading]=useState(false);const{actions}=useNewGameContext();const navigate=useNavigate();useEffect(()=>{// 초기 공개방 목록 로드\nloadPublicRooms();// 이벤트 리스너 등록\n// 주의: RoomManager → BroadcastChannel → (각 탭의) RoomManager → EventBus 순으로 흐릅니다.\n// 혹시 EventBus 수신이 누락되어도 SyncManager 직접 수신으로 보강합니다.\nconst unsubscribers=[eventBus.on('ROOMS_UPDATED',handleRoomsUpdated),eventBus.on('ROOM_CREATED',handleRoomCreated),eventBus.on('ROOM_DELETED',handleRoomDeleted)];// 주기적으로 공개방 목록 새로고침\nconst refreshInterval=setInterval(loadPublicRooms,1000);return()=>{unsubscribers.forEach(unsub=>unsub());clearInterval(refreshInterval);};},[]);const loadPublicRooms=()=>{// 단순: localStorage에 저장된 공개방을 직접 읽어 표시 (중간 이벤트 의존 제거)\ntry{const raw=localStorage.getItem('publicRooms');const rooms=raw?JSON.parse(raw):[];setPublicRooms(rooms);}catch(_unused){setPublicRooms([]);}};const handleRoomsUpdated=rooms=>{// 유지보수성: 이벤트 수신 시에도 저장소를 신뢰. 여기서는 저장소에서 재로딩.\nloadPublicRooms();};const handleRoomCreated=room=>{// 저장소 기준으로 재로딩하여 표시 데이터와 저장 데이터의 불일치 제거\nloadPublicRooms();};const handleRoomDeleted=roomCode=>{loadPublicRooms();};const handleCreateRoom=async()=>{if(subject.trim().length===0||subject.length>10){alert('주제는 1-10자 이내로 입력해주세요.');return;}setIsLoading(true);try{console.log('🚀 방 생성 시작 - 주제:',subject.trim(),'공개방:',isPublic);actions.createRoom(subject.trim(),isPublic);// 잠시 대기 후 관리페이지로 이동\nsetTimeout(()=>{navigate('/admin');},100);}catch(error){console.error('방 생성 실패:',error);alert('방 생성에 실패했습니다. 다시 시도해주세요.');}finally{setIsLoading(false);}};const handleJoinRoom=()=>{if(nickname.trim().length===0){alert('닉네임을 입력해주세요.');return;}if(roomCode.trim().length===0){alert('방 코드를 입력해주세요.');return;}const code=roomCode.trim().toUpperCase();// 입장 전 코드 유효성(공개방 목록 기준) 검증: 유효하지 않으면 아바타 페이지로 이동 금지\ntry{const rooms=roomManager.getPublicRooms();const exists=rooms.some(r=>r.code===code);if(!exists){alert('존재하지 않거나 종료된 방입니다. 방 코드를 확인하세요.');return;}}catch(_unused2){}// 플레이어 데이터를 localStorage에 저장하고 설정 페이지로 이동\nconst playerData={nickname:nickname.trim(),roomCode:code};localStorage.setItem('playerData',JSON.stringify(playerData));navigate('/player-setup');};const handlePublicRoomClick=room=>{setRoomCode(room.code);setActiveTab('join');};// 참여하기 탭 클릭 시 즉시 로드되도록 탭 버튼 핸들러를 래핑\nconst selectTab=tab=>{setActiveTab(tab);if(tab==='join'){// 저장소에서 읽은 값과 RoomManager 메모리 값을 함께 로그로 남겨 원인 파악\ntry{const raw=localStorage.getItem('publicRooms');const fromStorage=raw?JSON.parse(raw):[];const fromManager=roomManager.getPublicRooms();console.log('[JoinTab] Reload rooms',{storageCount:fromStorage.length,storageCodes:fromStorage.map(r=>r.code),managerCount:fromManager.length,managerCodes:fromManager.map(r=>r.code)});}catch(e){console.warn('[JoinTab] Failed to parse storage rooms',e);}loadPublicRooms();}};const formatTimeAgo=timestamp=>{const now=Date.now();const base=timestamp||now;const diff=now-base;const minutes=Math.floor(diff/60000);if(minutes<1)return'방금 전';if(minutes<60)return\"\".concat(minutes,\"\\uBD84 \\uC804\");const hours=Math.floor(minutes/60);if(hours<24)return\"\".concat(hours,\"\\uC2DC\\uAC04 \\uC804\");const days=Math.floor(hours/24);return\"\".concat(days,\"\\uC77C \\uC804\");};const getActivityStatus=room=>{const now=Date.now();const timeSinceActivity=now-room.lastHostActivity;if(room.hostActive&&timeSinceActivity<30000)return'active';// 30초 이내\nif(timeSinceActivity<60000)return'recent';// 1분 이내\nreturn'inactive';};return/*#__PURE__*/_jsxs(\"div\",{className:\"main-page\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"main-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\uD83C\\uDFC6 \\uACE8\\uB4E0\\uBCA8 \\uAC8C\\uC784\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\uC2E4\\uC2DC\\uAC04 \\uD034\\uC988 \\uAC8C\\uC784\\uC73C\\uB85C \\uC9C0\\uC2DD\\uC744 \\uACA8\\uB904\\uBCF4\\uC138\\uC694!\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-info\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83C\\uDF10 \\uC2E4\\uC2DC\\uAC04 \\uB3D9\\uAE30\\uD654\"}),/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83D\\uDCF1 \\uD06C\\uB85C\\uC2A4 \\uBE0C\\uB77C\\uC6B0\\uC800 \\uC9C0\\uC6D0\"}),/*#__PURE__*/_jsx(\"span\",{children:\"\\u26A1 \\uC790\\uB3D9 \\uBC29 \\uC815\\uB9AC\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"tab-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"tab-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"tab-button \".concat(activeTab==='create'?'active':''),onClick:()=>selectTab('create'),children:\"\\uBC29 \\uB9CC\\uB4E4\\uAE30\"}),/*#__PURE__*/_jsx(\"button\",{className:\"tab-button \".concat(activeTab==='join'?'active':''),onClick:()=>selectTab('join'),children:\"\\uCC38\\uC5EC\\uD558\\uAE30\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"tab-content\",children:[activeTab==='create'&&/*#__PURE__*/_jsxs(\"div\",{className:\"create-room-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uC0C8 \\uACE8\\uB4E0\\uBCA8 \\uBC29 \\uB9CC\\uB4E4\\uAE30\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"subject\",children:\"\\uC8FC\\uC81C (10\\uC790 \\uC774\\uB0B4)\"}),/*#__PURE__*/_jsx(\"input\",{id:\"subject\",type:\"text\",value:subject,onChange:e=>setSubject(e.target.value),placeholder:\"\\uC608: \\uD55C\\uAD6D\\uC0AC, \\uC601\\uC5B4, \\uC218\\uD559...\",maxLength:10,disabled:isLoading}),/*#__PURE__*/_jsxs(\"span\",{className:\"char-count\",children:[subject.length,\"/10\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"checkbox-label\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:isPublic,onChange:e=>setIsPublic(e.target.checked),disabled:isLoading}),/*#__PURE__*/_jsx(\"span\",{className:\"checkmark\"}),\"\\uACF5\\uAC1C\\uBC29\\uC73C\\uB85C \\uB9CC\\uB4E4\\uAE30\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"form-help\",children:[\"\\uACF5\\uAC1C\\uBC29\\uC740 \\uB2E4\\uB978 \\uC0AC\\uC6A9\\uC790\\uB4E4\\uC774 \\uCC38\\uC5EC\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\",isPublic&&/*#__PURE__*/_jsx(\"strong\",{children:\" \\uAD00\\uB9AC\\uC790\\uAC00 \\uC5C6\\uC73C\\uBA74 10\\uCD08 \\uD6C4 \\uC790\\uB3D9 \\uC0AD\\uC81C\\uB429\\uB2C8\\uB2E4.\"})]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-primary\",onClick:handleCreateRoom,disabled:subject.trim().length===0||isLoading,children:isLoading?'방 생성 중...':'방 만들기'})]}),activeTab==='join'&&/*#__PURE__*/_jsxs(\"div\",{className:\"join-room-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uACE8\\uB4E0\\uBCA8 \\uBC29 \\uCC38\\uC5EC\\uD558\\uAE30\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"nickname\",children:\"\\uB2C9\\uB124\\uC784\"}),/*#__PURE__*/_jsx(\"input\",{id:\"nickname\",type:\"text\",value:nickname,onChange:e=>setNickname(e.target.value),placeholder:\"\\uAC8C\\uC784\\uC5D0\\uC11C \\uC0AC\\uC6A9\\uD560 \\uB2C9\\uB124\\uC784\",maxLength:15})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"roomCode\",children:\"\\uBC29 \\uCF54\\uB4DC\"}),/*#__PURE__*/_jsx(\"input\",{id:\"roomCode\",type:\"text\",value:roomCode,onChange:e=>setRoomCode(e.target.value.toUpperCase()),placeholder:\"6\\uC790\\uB9AC \\uBC29 \\uCF54\\uB4DC \\uC785\\uB825\",maxLength:6})]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-primary\",onClick:handleJoinRoom,disabled:nickname.trim().length===0||roomCode.trim().length===0,children:\"\\uCC38\\uC5EC\\uD558\\uAE30\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"public-rooms\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"\\uACF5\\uAC1C\\uBC29 \\uBAA9\\uB85D\",/*#__PURE__*/_jsxs(\"span\",{className:\"room-count\",children:[\"(\",publicRooms.length,\"\\uAC1C)\"]})]}),publicRooms.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"no-rooms\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\uD604\\uC7AC \\uACF5\\uAC1C\\uB41C \\uBC29\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"}),/*#__PURE__*/_jsx(\"small\",{children:\"\\uC0C8\\uB85C\\uC6B4 \\uACF5\\uAC1C\\uBC29\\uC744 \\uB9CC\\uB4E4\\uC5B4\\uBCF4\\uC138\\uC694!\"})]}):/*#__PURE__*/_jsx(\"div\",{className:\"rooms-list\",children:publicRooms.map(room=>/*#__PURE__*/_jsxs(\"div\",{className:\"room-item \".concat(getActivityStatus(room)),onClick:()=>handlePublicRoomClick(room),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"room-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"room-subject\",children:room.subject}),/*#__PURE__*/_jsxs(\"span\",{className:\"room-code\",children:[\"\\uCF54\\uB4DC: \",room.code]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"room-stats\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"player-count\",children:[\"\\uD83D\\uDC65 \",room.playerCount,\"\\uBA85\"]}),/*#__PURE__*/_jsxs(\"span\",{className:\"room-activity\",children:[getActivityStatus(room)==='active'&&'🟢 활성',getActivityStatus(room)==='recent'&&'🟡 최근',getActivityStatus(room)==='inactive'&&'🔴 비활성']}),/*#__PURE__*/_jsx(\"span\",{className:\"room-time\",children:formatTimeAgo(room.createdAt)})]})]},room.code))})]})]})]})]})]});};export default NewMainPage;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useNewGameContext","roomManager","eventBus","jsx","_jsx","jsxs","_jsxs","NewMainPage","activeTab","setActiveTab","subject","setSubject","isPublic","setIsPublic","nickname","setNickname","roomCode","setRoomCode","publicRooms","setPublicRooms","isLoading","setIsLoading","actions","navigate","loadPublicRooms","unsubscribers","on","handleRoomsUpdated","handleRoomCreated","handleRoomDeleted","refreshInterval","setInterval","forEach","unsub","clearInterval","raw","localStorage","getItem","rooms","JSON","parse","_unused","room","handleCreateRoom","trim","length","alert","console","log","createRoom","setTimeout","error","handleJoinRoom","code","toUpperCase","getPublicRooms","exists","some","r","_unused2","playerData","setItem","stringify","handlePublicRoomClick","selectTab","tab","fromStorage","fromManager","storageCount","storageCodes","map","managerCount","managerCodes","e","warn","formatTimeAgo","timestamp","now","Date","base","diff","minutes","Math","floor","concat","hours","days","getActivityStatus","timeSinceActivity","lastHostActivity","hostActive","className","children","onClick","htmlFor","id","type","value","onChange","target","placeholder","maxLength","disabled","checked","playerCount","createdAt"],"sources":["C:/Users/9204r/.cursor/avatar/src/components/NewMainPage.tsx"],"sourcesContent":["/**\n * 새로운 모듈 기반 메인 페이지\n * RoomManager와 SyncManager를 활용한 실시간 동기화\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useNewGameContext } from '../contexts/NewGameContext';\nimport roomManager, { PublicRoom } from '../services/RoomManager';\nimport eventBus from '../services/EventBus';\nimport './MainPage.css';\n\nconst NewMainPage: React.FC = () => {\n  const [activeTab, setActiveTab] = useState<'create' | 'join'>('create');\n  const [subject, setSubject] = useState('');\n  const [isPublic, setIsPublic] = useState(false);\n  const [nickname, setNickname] = useState('');\n  const [roomCode, setRoomCode] = useState('');\n  const [publicRooms, setPublicRooms] = useState<PublicRoom[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { actions } = useNewGameContext();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // 초기 공개방 목록 로드\n    loadPublicRooms();\n\n    // 이벤트 리스너 등록\n    // 주의: RoomManager → BroadcastChannel → (각 탭의) RoomManager → EventBus 순으로 흐릅니다.\n    // 혹시 EventBus 수신이 누락되어도 SyncManager 직접 수신으로 보강합니다.\n    const unsubscribers = [\n      eventBus.on('ROOMS_UPDATED', handleRoomsUpdated),\n      eventBus.on('ROOM_CREATED', handleRoomCreated),\n      eventBus.on('ROOM_DELETED', handleRoomDeleted)\n    ];\n\n\n    // 주기적으로 공개방 목록 새로고침\n    const refreshInterval = setInterval(loadPublicRooms, 1000);\n\n    return () => {\n      unsubscribers.forEach(unsub => unsub());\n      clearInterval(refreshInterval);\n    };\n  }, []);\n\n  const loadPublicRooms = () => {\n    // 단순: localStorage에 저장된 공개방을 직접 읽어 표시 (중간 이벤트 의존 제거)\n    try {\n      const raw = localStorage.getItem('publicRooms');\n      const rooms: PublicRoom[] = raw ? JSON.parse(raw) : [];\n      setPublicRooms(rooms);\n    } catch {\n      setPublicRooms([]);\n    }\n  };\n\n  const handleRoomsUpdated = (rooms: PublicRoom[]) => {\n    // 유지보수성: 이벤트 수신 시에도 저장소를 신뢰. 여기서는 저장소에서 재로딩.\n    loadPublicRooms();\n  };\n\n  const handleRoomCreated = (room: PublicRoom) => {\n    // 저장소 기준으로 재로딩하여 표시 데이터와 저장 데이터의 불일치 제거\n    loadPublicRooms();\n  };\n\n  const handleRoomDeleted = (roomCode: string) => {\n    loadPublicRooms();\n  };\n\n  const handleCreateRoom = async () => {\n    if (subject.trim().length === 0 || subject.length > 10) {\n      alert('주제는 1-10자 이내로 입력해주세요.');\n      return;\n    }\n\n    setIsLoading(true);\n    \n    try {\n      console.log('🚀 방 생성 시작 - 주제:', subject.trim(), '공개방:', isPublic);\n      \n      actions.createRoom(subject.trim(), isPublic);\n      \n      // 잠시 대기 후 관리페이지로 이동\n      setTimeout(() => {\n        navigate('/admin');\n      }, 100);\n      \n    } catch (error) {\n      console.error('방 생성 실패:', error);\n      alert('방 생성에 실패했습니다. 다시 시도해주세요.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleJoinRoom = () => {\n    if (nickname.trim().length === 0) {\n      alert('닉네임을 입력해주세요.');\n      return;\n    }\n\n    if (roomCode.trim().length === 0) {\n      alert('방 코드를 입력해주세요.');\n      return;\n    }\n    const code = roomCode.trim().toUpperCase();\n    // 입장 전 코드 유효성(공개방 목록 기준) 검증: 유효하지 않으면 아바타 페이지로 이동 금지\n    try {\n      const rooms = roomManager.getPublicRooms();\n      const exists = rooms.some(r => r.code === code);\n      if (!exists) {\n        alert('존재하지 않거나 종료된 방입니다. 방 코드를 확인하세요.');\n        return;\n      }\n    } catch {}\n\n    // 플레이어 데이터를 localStorage에 저장하고 설정 페이지로 이동\n    const playerData = {\n      nickname: nickname.trim(),\n      roomCode: code\n    };\n\n    localStorage.setItem('playerData', JSON.stringify(playerData));\n    navigate('/player-setup');\n  };\n\n  const handlePublicRoomClick = (room: PublicRoom) => {\n    setRoomCode(room.code);\n    setActiveTab('join');\n  };\n\n  // 참여하기 탭 클릭 시 즉시 로드되도록 탭 버튼 핸들러를 래핑\n  const selectTab = (tab: 'create' | 'join') => {\n    setActiveTab(tab);\n    if (tab === 'join') {\n      // 저장소에서 읽은 값과 RoomManager 메모리 값을 함께 로그로 남겨 원인 파악\n      try {\n        const raw = localStorage.getItem('publicRooms');\n        const fromStorage: PublicRoom[] = raw ? JSON.parse(raw) : [];\n        const fromManager = roomManager.getPublicRooms();\n        console.log('[JoinTab] Reload rooms', {\n          storageCount: fromStorage.length,\n          storageCodes: fromStorage.map(r => r.code),\n          managerCount: fromManager.length,\n          managerCodes: fromManager.map(r => r.code)\n        });\n      } catch (e) {\n        console.warn('[JoinTab] Failed to parse storage rooms', e);\n      }\n      loadPublicRooms();\n    }\n  };\n\n  const formatTimeAgo = (timestamp?: number): string => {\n    const now = Date.now();\n    const base = timestamp || now;\n    const diff = now - base;\n    const minutes = Math.floor(diff / 60000);\n    \n    if (minutes < 1) return '방금 전';\n    if (minutes < 60) return `${minutes}분 전`;\n    \n    const hours = Math.floor(minutes / 60);\n    if (hours < 24) return `${hours}시간 전`;\n    \n    const days = Math.floor(hours / 24);\n    return `${days}일 전`;\n  };\n\n  const getActivityStatus = (room: PublicRoom): string => {\n    const now = Date.now();\n    const timeSinceActivity = now - room.lastHostActivity;\n    \n    if (room.hostActive && timeSinceActivity < 30000) return 'active'; // 30초 이내\n    if (timeSinceActivity < 60000) return 'recent'; // 1분 이내\n    return 'inactive';\n  };\n\n  return (\n    <div className=\"main-page\">\n      <header className=\"main-header\">\n        <h1>🏆 골든벨 게임</h1>\n        <p>실시간 퀴즈 게임으로 지식을 겨뤄보세요!</p>\n        <div className=\"status-info\">\n          <span>🌐 실시간 동기화</span>\n          <span>📱 크로스 브라우저 지원</span>\n          <span>⚡ 자동 방 정리</span>\n        </div>\n      </header>\n\n      <div className=\"tab-container\">\n        <div className=\"tab-buttons\">\n          <button \n            className={`tab-button ${activeTab === 'create' ? 'active' : ''}`}\n            onClick={() => selectTab('create')}\n          >\n            방 만들기\n          </button>\n          <button \n            className={`tab-button ${activeTab === 'join' ? 'active' : ''}`}\n            onClick={() => selectTab('join')}\n          >\n            참여하기\n          </button>\n        </div>\n\n        <div className=\"tab-content\">\n          {activeTab === 'create' && (\n            <div className=\"create-room-section\">\n              <h2>새 골든벨 방 만들기</h2>\n              <div className=\"form-group\">\n                <label htmlFor=\"subject\">주제 (10자 이내)</label>\n                <input\n                  id=\"subject\"\n                  type=\"text\"\n                  value={subject}\n                  onChange={(e) => setSubject(e.target.value)}\n                  placeholder=\"예: 한국사, 영어, 수학...\"\n                  maxLength={10}\n                  disabled={isLoading}\n                />\n                <span className=\"char-count\">{subject.length}/10</span>\n              </div>\n              \n              <div className=\"form-group\">\n                <label className=\"checkbox-label\">\n                  <input\n                    type=\"checkbox\"\n                    checked={isPublic}\n                    onChange={(e) => setIsPublic(e.target.checked)}\n                    disabled={isLoading}\n                  />\n                  <span className=\"checkmark\"></span>\n                  공개방으로 만들기\n                </label>\n                <p className=\"form-help\">\n                  공개방은 다른 사용자들이 참여할 수 있습니다. \n                  {isPublic && <strong> 관리자가 없으면 10초 후 자동 삭제됩니다.</strong>}\n                </p>\n              </div>\n              \n              <button \n                className=\"btn-primary\"\n                onClick={handleCreateRoom}\n                disabled={subject.trim().length === 0 || isLoading}\n              >\n                {isLoading ? '방 생성 중...' : '방 만들기'}\n              </button>\n            </div>\n          )}\n\n          {activeTab === 'join' && (\n            <div className=\"join-room-section\">\n              <h2>골든벨 방 참여하기</h2>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"nickname\">닉네임</label>\n                <input\n                  id=\"nickname\"\n                  type=\"text\"\n                  value={nickname}\n                  onChange={(e) => setNickname(e.target.value)}\n                  placeholder=\"게임에서 사용할 닉네임\"\n                  maxLength={15}\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"roomCode\">방 코드</label>\n                <input\n                  id=\"roomCode\"\n                  type=\"text\"\n                  value={roomCode}\n                  onChange={(e) => setRoomCode(e.target.value.toUpperCase())}\n                  placeholder=\"6자리 방 코드 입력\"\n                  maxLength={6}\n                />\n              </div>\n              \n              <button \n                className=\"btn-primary\"\n                onClick={handleJoinRoom}\n                disabled={nickname.trim().length === 0 || roomCode.trim().length === 0}\n              >\n                참여하기\n              </button>\n              \n              <div className=\"public-rooms\">\n                <h3>\n                  공개방 목록 \n                  <span className=\"room-count\">({publicRooms.length}개)</span>\n                </h3>\n                \n                {publicRooms.length === 0 ? (\n                  <div className=\"no-rooms\">\n                    <p>현재 공개된 방이 없습니다.</p>\n                    <small>새로운 공개방을 만들어보세요!</small>\n                  </div>\n                ) : (\n                  <div className=\"rooms-list\">\n                    {publicRooms.map(room => (\n                      <div \n                        key={room.code} \n                        className={`room-item ${getActivityStatus(room)}`}\n                        onClick={() => handlePublicRoomClick(room)}\n                      >\n                        <div className=\"room-info\">\n                          <span className=\"room-subject\">{room.subject}</span>\n                          <span className=\"room-code\">코드: {room.code}</span>\n                        </div>\n                        <div className=\"room-stats\">\n                          <span className=\"player-count\">👥 {room.playerCount}명</span>\n                          <span className=\"room-activity\">\n                            {getActivityStatus(room) === 'active' && '🟢 활성'}\n                            {getActivityStatus(room) === 'recent' && '🟡 최근'}\n                            {getActivityStatus(room) === 'inactive' && '🔴 비활성'}\n                          </span>\n                          <span className=\"room-time\">{formatTimeAgo(room.createdAt)}</span>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NewMainPage;\n"],"mappings":"AAAA;AACA;AACA;AACA,GAEA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,iBAAiB,KAAQ,4BAA4B,CAC9D,MAAO,CAAAC,WAAW,KAAsB,yBAAyB,CACjE,MAAO,CAAAC,QAAQ,KAAM,sBAAsB,CAC3C,MAAO,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExB,KAAM,CAAAC,WAAqB,CAAGA,CAAA,GAAM,CAClC,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGZ,QAAQ,CAAoB,QAAQ,CAAC,CACvE,KAAM,CAACa,OAAO,CAAEC,UAAU,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACe,QAAQ,CAAEC,WAAW,CAAC,CAAGhB,QAAQ,CAAC,KAAK,CAAC,CAC/C,KAAM,CAACiB,QAAQ,CAAEC,WAAW,CAAC,CAAGlB,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACmB,QAAQ,CAAEC,WAAW,CAAC,CAAGpB,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACqB,WAAW,CAAEC,cAAc,CAAC,CAAGtB,QAAQ,CAAe,EAAE,CAAC,CAChE,KAAM,CAACuB,SAAS,CAAEC,YAAY,CAAC,CAAGxB,QAAQ,CAAC,KAAK,CAAC,CAEjD,KAAM,CAAEyB,OAAQ,CAAC,CAAGtB,iBAAiB,CAAC,CAAC,CACvC,KAAM,CAAAuB,QAAQ,CAAGxB,WAAW,CAAC,CAAC,CAE9BD,SAAS,CAAC,IAAM,CACd;AACA0B,eAAe,CAAC,CAAC,CAEjB;AACA;AACA;AACA,KAAM,CAAAC,aAAa,CAAG,CACpBvB,QAAQ,CAACwB,EAAE,CAAC,eAAe,CAAEC,kBAAkB,CAAC,CAChDzB,QAAQ,CAACwB,EAAE,CAAC,cAAc,CAAEE,iBAAiB,CAAC,CAC9C1B,QAAQ,CAACwB,EAAE,CAAC,cAAc,CAAEG,iBAAiB,CAAC,CAC/C,CAGD;AACA,KAAM,CAAAC,eAAe,CAAGC,WAAW,CAACP,eAAe,CAAE,IAAI,CAAC,CAE1D,MAAO,IAAM,CACXC,aAAa,CAACO,OAAO,CAACC,KAAK,EAAIA,KAAK,CAAC,CAAC,CAAC,CACvCC,aAAa,CAACJ,eAAe,CAAC,CAChC,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAN,eAAe,CAAGA,CAAA,GAAM,CAC5B;AACA,GAAI,CACF,KAAM,CAAAW,GAAG,CAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAC/C,KAAM,CAAAC,KAAmB,CAAGH,GAAG,CAAGI,IAAI,CAACC,KAAK,CAACL,GAAG,CAAC,CAAG,EAAE,CACtDhB,cAAc,CAACmB,KAAK,CAAC,CACvB,CAAE,MAAAG,OAAA,CAAM,CACNtB,cAAc,CAAC,EAAE,CAAC,CACpB,CACF,CAAC,CAED,KAAM,CAAAQ,kBAAkB,CAAIW,KAAmB,EAAK,CAClD;AACAd,eAAe,CAAC,CAAC,CACnB,CAAC,CAED,KAAM,CAAAI,iBAAiB,CAAIc,IAAgB,EAAK,CAC9C;AACAlB,eAAe,CAAC,CAAC,CACnB,CAAC,CAED,KAAM,CAAAK,iBAAiB,CAAIb,QAAgB,EAAK,CAC9CQ,eAAe,CAAC,CAAC,CACnB,CAAC,CAED,KAAM,CAAAmB,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAIjC,OAAO,CAACkC,IAAI,CAAC,CAAC,CAACC,MAAM,GAAK,CAAC,EAAInC,OAAO,CAACmC,MAAM,CAAG,EAAE,CAAE,CACtDC,KAAK,CAAC,uBAAuB,CAAC,CAC9B,OACF,CAEAzB,YAAY,CAAC,IAAI,CAAC,CAElB,GAAI,CACF0B,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAEtC,OAAO,CAACkC,IAAI,CAAC,CAAC,CAAE,MAAM,CAAEhC,QAAQ,CAAC,CAEjEU,OAAO,CAAC2B,UAAU,CAACvC,OAAO,CAACkC,IAAI,CAAC,CAAC,CAAEhC,QAAQ,CAAC,CAE5C;AACAsC,UAAU,CAAC,IAAM,CACf3B,QAAQ,CAAC,QAAQ,CAAC,CACpB,CAAC,CAAE,GAAG,CAAC,CAET,CAAE,MAAO4B,KAAK,CAAE,CACdJ,OAAO,CAACI,KAAK,CAAC,UAAU,CAAEA,KAAK,CAAC,CAChCL,KAAK,CAAC,0BAA0B,CAAC,CACnC,CAAC,OAAS,CACRzB,YAAY,CAAC,KAAK,CAAC,CACrB,CACF,CAAC,CAED,KAAM,CAAA+B,cAAc,CAAGA,CAAA,GAAM,CAC3B,GAAItC,QAAQ,CAAC8B,IAAI,CAAC,CAAC,CAACC,MAAM,GAAK,CAAC,CAAE,CAChCC,KAAK,CAAC,cAAc,CAAC,CACrB,OACF,CAEA,GAAI9B,QAAQ,CAAC4B,IAAI,CAAC,CAAC,CAACC,MAAM,GAAK,CAAC,CAAE,CAChCC,KAAK,CAAC,eAAe,CAAC,CACtB,OACF,CACA,KAAM,CAAAO,IAAI,CAAGrC,QAAQ,CAAC4B,IAAI,CAAC,CAAC,CAACU,WAAW,CAAC,CAAC,CAC1C;AACA,GAAI,CACF,KAAM,CAAAhB,KAAK,CAAGrC,WAAW,CAACsD,cAAc,CAAC,CAAC,CAC1C,KAAM,CAAAC,MAAM,CAAGlB,KAAK,CAACmB,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACL,IAAI,GAAKA,IAAI,CAAC,CAC/C,GAAI,CAACG,MAAM,CAAE,CACXV,KAAK,CAAC,iCAAiC,CAAC,CACxC,OACF,CACF,CAAE,MAAAa,QAAA,CAAM,CAAC,CAET;AACA,KAAM,CAAAC,UAAU,CAAG,CACjB9C,QAAQ,CAAEA,QAAQ,CAAC8B,IAAI,CAAC,CAAC,CACzB5B,QAAQ,CAAEqC,IACZ,CAAC,CAEDjB,YAAY,CAACyB,OAAO,CAAC,YAAY,CAAEtB,IAAI,CAACuB,SAAS,CAACF,UAAU,CAAC,CAAC,CAC9DrC,QAAQ,CAAC,eAAe,CAAC,CAC3B,CAAC,CAED,KAAM,CAAAwC,qBAAqB,CAAIrB,IAAgB,EAAK,CAClDzB,WAAW,CAACyB,IAAI,CAACW,IAAI,CAAC,CACtB5C,YAAY,CAAC,MAAM,CAAC,CACtB,CAAC,CAED;AACA,KAAM,CAAAuD,SAAS,CAAIC,GAAsB,EAAK,CAC5CxD,YAAY,CAACwD,GAAG,CAAC,CACjB,GAAIA,GAAG,GAAK,MAAM,CAAE,CAClB;AACA,GAAI,CACF,KAAM,CAAA9B,GAAG,CAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAC/C,KAAM,CAAA6B,WAAyB,CAAG/B,GAAG,CAAGI,IAAI,CAACC,KAAK,CAACL,GAAG,CAAC,CAAG,EAAE,CAC5D,KAAM,CAAAgC,WAAW,CAAGlE,WAAW,CAACsD,cAAc,CAAC,CAAC,CAChDR,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAE,CACpCoB,YAAY,CAAEF,WAAW,CAACrB,MAAM,CAChCwB,YAAY,CAAEH,WAAW,CAACI,GAAG,CAACZ,CAAC,EAAIA,CAAC,CAACL,IAAI,CAAC,CAC1CkB,YAAY,CAAEJ,WAAW,CAACtB,MAAM,CAChC2B,YAAY,CAAEL,WAAW,CAACG,GAAG,CAACZ,CAAC,EAAIA,CAAC,CAACL,IAAI,CAC3C,CAAC,CAAC,CACJ,CAAE,MAAOoB,CAAC,CAAE,CACV1B,OAAO,CAAC2B,IAAI,CAAC,yCAAyC,CAAED,CAAC,CAAC,CAC5D,CACAjD,eAAe,CAAC,CAAC,CACnB,CACF,CAAC,CAED,KAAM,CAAAmD,aAAa,CAAIC,SAAkB,EAAa,CACpD,KAAM,CAAAC,GAAG,CAAGC,IAAI,CAACD,GAAG,CAAC,CAAC,CACtB,KAAM,CAAAE,IAAI,CAAGH,SAAS,EAAIC,GAAG,CAC7B,KAAM,CAAAG,IAAI,CAAGH,GAAG,CAAGE,IAAI,CACvB,KAAM,CAAAE,OAAO,CAAGC,IAAI,CAACC,KAAK,CAACH,IAAI,CAAG,KAAK,CAAC,CAExC,GAAIC,OAAO,CAAG,CAAC,CAAE,MAAO,MAAM,CAC9B,GAAIA,OAAO,CAAG,EAAE,CAAE,SAAAG,MAAA,CAAUH,OAAO,kBAEnC,KAAM,CAAAI,KAAK,CAAGH,IAAI,CAACC,KAAK,CAACF,OAAO,CAAG,EAAE,CAAC,CACtC,GAAII,KAAK,CAAG,EAAE,CAAE,SAAAD,MAAA,CAAUC,KAAK,wBAE/B,KAAM,CAAAC,IAAI,CAAGJ,IAAI,CAACC,KAAK,CAACE,KAAK,CAAG,EAAE,CAAC,CACnC,SAAAD,MAAA,CAAUE,IAAI,kBAChB,CAAC,CAED,KAAM,CAAAC,iBAAiB,CAAI7C,IAAgB,EAAa,CACtD,KAAM,CAAAmC,GAAG,CAAGC,IAAI,CAACD,GAAG,CAAC,CAAC,CACtB,KAAM,CAAAW,iBAAiB,CAAGX,GAAG,CAAGnC,IAAI,CAAC+C,gBAAgB,CAErD,GAAI/C,IAAI,CAACgD,UAAU,EAAIF,iBAAiB,CAAG,KAAK,CAAE,MAAO,QAAQ,CAAE;AACnE,GAAIA,iBAAiB,CAAG,KAAK,CAAE,MAAO,QAAQ,CAAE;AAChD,MAAO,UAAU,CACnB,CAAC,CAED,mBACElF,KAAA,QAAKqF,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBtF,KAAA,WAAQqF,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC7BxF,IAAA,OAAAwF,QAAA,CAAI,8CAAS,CAAI,CAAC,cAClBxF,IAAA,MAAAwF,QAAA,CAAG,6GAAsB,CAAG,CAAC,cAC7BtF,KAAA,QAAKqF,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BxF,IAAA,SAAAwF,QAAA,CAAM,oDAAU,CAAM,CAAC,cACvBxF,IAAA,SAAAwF,QAAA,CAAM,uEAAc,CAAM,CAAC,cAC3BxF,IAAA,SAAAwF,QAAA,CAAM,yCAAS,CAAM,CAAC,EACnB,CAAC,EACA,CAAC,cAETtF,KAAA,QAAKqF,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BtF,KAAA,QAAKqF,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BxF,IAAA,WACEuF,SAAS,eAAAP,MAAA,CAAgB5E,SAAS,GAAK,QAAQ,CAAG,QAAQ,CAAG,EAAE,CAAG,CAClEqF,OAAO,CAAEA,CAAA,GAAM7B,SAAS,CAAC,QAAQ,CAAE,CAAA4B,QAAA,CACpC,2BAED,CAAQ,CAAC,cACTxF,IAAA,WACEuF,SAAS,eAAAP,MAAA,CAAgB5E,SAAS,GAAK,MAAM,CAAG,QAAQ,CAAG,EAAE,CAAG,CAChEqF,OAAO,CAAEA,CAAA,GAAM7B,SAAS,CAAC,MAAM,CAAE,CAAA4B,QAAA,CAClC,0BAED,CAAQ,CAAC,EACN,CAAC,cAENtF,KAAA,QAAKqF,SAAS,CAAC,aAAa,CAAAC,QAAA,EACzBpF,SAAS,GAAK,QAAQ,eACrBF,KAAA,QAAKqF,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eAClCxF,IAAA,OAAAwF,QAAA,CAAI,qDAAW,CAAI,CAAC,cACpBtF,KAAA,QAAKqF,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBxF,IAAA,UAAO0F,OAAO,CAAC,SAAS,CAAAF,QAAA,CAAC,sCAAW,CAAO,CAAC,cAC5CxF,IAAA,UACE2F,EAAE,CAAC,SAAS,CACZC,IAAI,CAAC,MAAM,CACXC,KAAK,CAAEvF,OAAQ,CACfwF,QAAQ,CAAGzB,CAAC,EAAK9D,UAAU,CAAC8D,CAAC,CAAC0B,MAAM,CAACF,KAAK,CAAE,CAC5CG,WAAW,CAAC,2DAAmB,CAC/BC,SAAS,CAAE,EAAG,CACdC,QAAQ,CAAElF,SAAU,CACrB,CAAC,cACFd,KAAA,SAAMqF,SAAS,CAAC,YAAY,CAAAC,QAAA,EAAElF,OAAO,CAACmC,MAAM,CAAC,KAAG,EAAM,CAAC,EACpD,CAAC,cAENvC,KAAA,QAAKqF,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBtF,KAAA,UAAOqF,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC/BxF,IAAA,UACE4F,IAAI,CAAC,UAAU,CACfO,OAAO,CAAE3F,QAAS,CAClBsF,QAAQ,CAAGzB,CAAC,EAAK5D,WAAW,CAAC4D,CAAC,CAAC0B,MAAM,CAACI,OAAO,CAAE,CAC/CD,QAAQ,CAAElF,SAAU,CACrB,CAAC,cACFhB,IAAA,SAAMuF,SAAS,CAAC,WAAW,CAAO,CAAC,oDAErC,EAAO,CAAC,cACRrF,KAAA,MAAGqF,SAAS,CAAC,WAAW,CAAAC,QAAA,EAAC,0HAEvB,CAAChF,QAAQ,eAAIR,IAAA,WAAAwF,QAAA,CAAQ,2GAAyB,CAAQ,CAAC,EACtD,CAAC,EACD,CAAC,cAENxF,IAAA,WACEuF,SAAS,CAAC,aAAa,CACvBE,OAAO,CAAElD,gBAAiB,CAC1B2D,QAAQ,CAAE5F,OAAO,CAACkC,IAAI,CAAC,CAAC,CAACC,MAAM,GAAK,CAAC,EAAIzB,SAAU,CAAAwE,QAAA,CAElDxE,SAAS,CAAG,WAAW,CAAG,OAAO,CAC5B,CAAC,EACN,CACN,CAEAZ,SAAS,GAAK,MAAM,eACnBF,KAAA,QAAKqF,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChCxF,IAAA,OAAAwF,QAAA,CAAI,oDAAU,CAAI,CAAC,cAEnBtF,KAAA,QAAKqF,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBxF,IAAA,UAAO0F,OAAO,CAAC,UAAU,CAAAF,QAAA,CAAC,oBAAG,CAAO,CAAC,cACrCxF,IAAA,UACE2F,EAAE,CAAC,UAAU,CACbC,IAAI,CAAC,MAAM,CACXC,KAAK,CAAEnF,QAAS,CAChBoF,QAAQ,CAAGzB,CAAC,EAAK1D,WAAW,CAAC0D,CAAC,CAAC0B,MAAM,CAACF,KAAK,CAAE,CAC7CG,WAAW,CAAC,gEAAc,CAC1BC,SAAS,CAAE,EAAG,CACf,CAAC,EACC,CAAC,cAEN/F,KAAA,QAAKqF,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBxF,IAAA,UAAO0F,OAAO,CAAC,UAAU,CAAAF,QAAA,CAAC,qBAAI,CAAO,CAAC,cACtCxF,IAAA,UACE2F,EAAE,CAAC,UAAU,CACbC,IAAI,CAAC,MAAM,CACXC,KAAK,CAAEjF,QAAS,CAChBkF,QAAQ,CAAGzB,CAAC,EAAKxD,WAAW,CAACwD,CAAC,CAAC0B,MAAM,CAACF,KAAK,CAAC3C,WAAW,CAAC,CAAC,CAAE,CAC3D8C,WAAW,CAAC,gDAAa,CACzBC,SAAS,CAAE,CAAE,CACd,CAAC,EACC,CAAC,cAENjG,IAAA,WACEuF,SAAS,CAAC,aAAa,CACvBE,OAAO,CAAEzC,cAAe,CACxBkD,QAAQ,CAAExF,QAAQ,CAAC8B,IAAI,CAAC,CAAC,CAACC,MAAM,GAAK,CAAC,EAAI7B,QAAQ,CAAC4B,IAAI,CAAC,CAAC,CAACC,MAAM,GAAK,CAAE,CAAA+C,QAAA,CACxE,0BAED,CAAQ,CAAC,cAETtF,KAAA,QAAKqF,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BtF,KAAA,OAAAsF,QAAA,EAAI,iCAEF,cAAAtF,KAAA,SAAMqF,SAAS,CAAC,YAAY,CAAAC,QAAA,EAAC,GAAC,CAAC1E,WAAW,CAAC2B,MAAM,CAAC,SAAE,EAAM,CAAC,EACzD,CAAC,CAEJ3B,WAAW,CAAC2B,MAAM,GAAK,CAAC,cACvBvC,KAAA,QAAKqF,SAAS,CAAC,UAAU,CAAAC,QAAA,eACvBxF,IAAA,MAAAwF,QAAA,CAAG,wEAAe,CAAG,CAAC,cACtBxF,IAAA,UAAAwF,QAAA,CAAO,mFAAgB,CAAO,CAAC,EAC5B,CAAC,cAENxF,IAAA,QAAKuF,SAAS,CAAC,YAAY,CAAAC,QAAA,CACxB1E,WAAW,CAACoD,GAAG,CAAC5B,IAAI,eACnBpC,KAAA,QAEEqF,SAAS,cAAAP,MAAA,CAAeG,iBAAiB,CAAC7C,IAAI,CAAC,CAAG,CAClDmD,OAAO,CAAEA,CAAA,GAAM9B,qBAAqB,CAACrB,IAAI,CAAE,CAAAkD,QAAA,eAE3CtF,KAAA,QAAKqF,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBxF,IAAA,SAAMuF,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAElD,IAAI,CAAChC,OAAO,CAAO,CAAC,cACpDJ,KAAA,SAAMqF,SAAS,CAAC,WAAW,CAAAC,QAAA,EAAC,gBAAI,CAAClD,IAAI,CAACW,IAAI,EAAO,CAAC,EAC/C,CAAC,cACN/C,KAAA,QAAKqF,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBtF,KAAA,SAAMqF,SAAS,CAAC,cAAc,CAAAC,QAAA,EAAC,eAAG,CAAClD,IAAI,CAAC8D,WAAW,CAAC,QAAC,EAAM,CAAC,cAC5DlG,KAAA,SAAMqF,SAAS,CAAC,eAAe,CAAAC,QAAA,EAC5BL,iBAAiB,CAAC7C,IAAI,CAAC,GAAK,QAAQ,EAAI,OAAO,CAC/C6C,iBAAiB,CAAC7C,IAAI,CAAC,GAAK,QAAQ,EAAI,OAAO,CAC/C6C,iBAAiB,CAAC7C,IAAI,CAAC,GAAK,UAAU,EAAI,QAAQ,EAC/C,CAAC,cACPtC,IAAA,SAAMuF,SAAS,CAAC,WAAW,CAAAC,QAAA,CAAEjB,aAAa,CAACjC,IAAI,CAAC+D,SAAS,CAAC,CAAO,CAAC,EAC/D,CAAC,GAhBD/D,IAAI,CAACW,IAiBP,CACN,CAAC,CACC,CACN,EACE,CAAC,EACH,CACN,EACE,CAAC,EACH,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAA9C,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}