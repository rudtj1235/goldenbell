{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\9204r\\\\.cursor\\\\avatar\\\\src\\\\contexts\\\\GameContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  room: null,\n  questions: [],\n  players: [],\n  currentQuestionIndex: 0,\n  gameState: 'waiting',\n  gameSettings: {\n    timeLimit: 5,\n    answerRevealTime: 5,\n    eliminationMode: false,\n    eliminationThreshold: 3,\n    autoMode: true\n  },\n  currentPlayer: null\n};\nfunction generateRoomCode() {\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  let result = '';\n  for (let i = 0; i < 4; i++) {\n    result += chars.charAt(Math.floor(Math.random() * chars.length));\n  }\n  return result;\n}\nfunction gameReducer(state, action) {\n  switch (action.type) {\n    case 'CREATE_ROOM':\n      {\n        const newRoom = {\n          id: Date.now().toString(),\n          code: generateRoomCode(),\n          subject: action.payload.subject,\n          isPublic: action.payload.isPublic,\n          hostId: action.payload.hostId,\n          players: [],\n          questions: [],\n          currentQuestionIndex: 0,\n          gameState: 'waiting',\n          eliminationMode: state.gameSettings.eliminationMode,\n          eliminationThreshold: state.gameSettings.eliminationThreshold,\n          autoMode: state.gameSettings.autoMode,\n          answerRevealTime: state.gameSettings.answerRevealTime\n        };\n\n        // Í≥µÍ∞úÎ∞©Ïù¥Î©¥ localStorageÏóê Ï†ÄÏû•\n        if (action.payload.isPublic) {\n          const publicRoom = {\n            id: newRoom.id,\n            code: newRoom.code,\n            subject: newRoom.subject,\n            isPublic: true,\n            playerCount: 0\n          };\n          const savedRooms = localStorage.getItem('publicRooms');\n          const existingRooms = savedRooms ? JSON.parse(savedRooms) : [];\n          const updatedRooms = [...existingRooms, publicRoom];\n          localStorage.setItem('publicRooms', JSON.stringify(updatedRooms));\n          console.log('üî• Í≥µÍ∞úÎ∞© Ï†ÄÏû•Îê®:', publicRoom);\n          console.log('üìã ÌòÑÏû¨ Í≥µÍ∞úÎ∞© Î™©Î°ù:', updatedRooms);\n        }\n        return {\n          ...state,\n          room: newRoom\n        };\n      }\n    case 'JOIN_ROOM':\n      {\n        // Î∞©Ïù¥ ÏóÜÎäî Í≤ΩÏö∞ ÏûÑÏãúÎ°ú Î∞©ÏùÑ ÏÉùÏÑ± (Ïã§Ï†úÎ°úÎäî ÏÑúÎ≤ÑÏóêÏÑú Î∞©ÏùÑ Ï∞æÏïÑÏïº Ìï®)\n        if (!state.room) {\n          // ÏûÑÏãú Î∞© ÏÉùÏÑ± Î°úÏßÅ - Ïã§Ï†úÎ°úÎäî ÏÑúÎ≤ÑÏóêÏÑú Î∞© Ï†ïÎ≥¥Î•º Í∞ÄÏ†∏ÏôÄÏïº Ìï®\n          const tempRoom = {\n            id: 'temp_room',\n            code: action.payload.roomCode,\n            subject: 'ÏûÑÏãú Î∞©',\n            isPublic: false,\n            hostId: 'temp_host',\n            players: [action.payload.player],\n            questions: [],\n            currentQuestionIndex: 0,\n            gameState: 'waiting',\n            eliminationMode: false,\n            eliminationThreshold: 3,\n            autoMode: true,\n            answerRevealTime: 5\n          };\n          return {\n            ...state,\n            room: tempRoom,\n            players: [action.payload.player]\n          };\n        }\n\n        // ÏΩîÎìúÍ∞Ä Îã§Î•¥Î©¥ Î¨¥Ïãú (Ïã§Ï†úÎ°úÎäî ÏÑúÎ≤ÑÏóêÏÑú Í≤ÄÏ¶ù)\n        if (state.room.code !== action.payload.roomCode) {\n          console.warn('Î∞© ÏΩîÎìúÍ∞Ä ÏùºÏπòÌïòÏßÄ ÏïäÏäµÎãàÎã§:', state.room.code, 'vs', action.payload.roomCode);\n          return state;\n        }\n        const playerExists = state.players.some(p => p.id === action.payload.player.id);\n        if (playerExists) {\n          return state; // Ïù¥ÎØ∏ Ï∞∏Ïó¨Ìïú ÌîåÎ†àÏù¥Ïñ¥Î©¥ Î¨¥Ïãú\n        }\n        const updatedPlayers = [...state.players, action.payload.player];\n\n        // Í≥µÍ∞úÎ∞©Ïù¥Î©¥ localStorageÏùò ÌîåÎ†àÏù¥Ïñ¥ Ïàò ÏóÖÎç∞Ïù¥Ìä∏\n        if (state.room && state.room.isPublic) {\n          const savedRooms = localStorage.getItem('publicRooms');\n          if (savedRooms) {\n            const existingRooms = JSON.parse(savedRooms);\n            const updatedRooms = existingRooms.map(room => {\n              var _state$room;\n              return room.code === ((_state$room = state.room) === null || _state$room === void 0 ? void 0 : _state$room.code) ? {\n                ...room,\n                playerCount: updatedPlayers.length\n              } : room;\n            });\n            localStorage.setItem('publicRooms', JSON.stringify(updatedRooms));\n          }\n        }\n\n        // Í≤åÏûÑ ÏßÑÌñâÌéòÏù¥ÏßÄÎ•º ÏúÑÌïú localStorage ÏóÖÎç∞Ïù¥Ìä∏ (ÏÉà ÌÉ≠ ÎèôÍ∏∞Ìôî)\n        const gameData = {\n          room: state.room ? {\n            ...state.room,\n            players: updatedPlayers\n          } : null,\n          questions: state.questions,\n          players: updatedPlayers,\n          gameState: state.gameState,\n          currentQuestionIndex: state.currentQuestionIndex,\n          gameSettings: state.gameSettings\n        };\n        localStorage.setItem('gameHostData', JSON.stringify(gameData));\n        console.log('üîÑ gameHostData ÏóÖÎç∞Ïù¥Ìä∏Îê® - ÌîåÎ†àÏù¥Ïñ¥ Ï∂îÍ∞Ä:', action.payload.player.nickname);\n        return {\n          ...state,\n          players: updatedPlayers,\n          room: {\n            ...state.room,\n            players: updatedPlayers\n          }\n        };\n      }\n    case 'ADD_QUESTION':\n      {\n        const newQuestions = [...state.questions, action.payload];\n        return {\n          ...state,\n          questions: newQuestions,\n          room: state.room ? {\n            ...state.room,\n            questions: newQuestions\n          } : null\n        };\n      }\n    case 'DELETE_QUESTION':\n      {\n        const filteredQuestions = state.questions.filter(q => q.id !== action.payload);\n        return {\n          ...state,\n          questions: filteredQuestions,\n          room: state.room ? {\n            ...state.room,\n            questions: filteredQuestions\n          } : null\n        };\n      }\n    case 'REORDER_QUESTIONS':\n      return {\n        ...state,\n        questions: action.payload,\n        room: state.room ? {\n          ...state.room,\n          questions: action.payload\n        } : null\n      };\n    case 'UPDATE_GAME_SETTINGS':\n      const newSettings = {\n        ...state.gameSettings,\n        ...action.payload\n      };\n      return {\n        ...state,\n        gameSettings: newSettings,\n        room: state.room ? {\n          ...state.room,\n          eliminationMode: newSettings.eliminationMode,\n          eliminationThreshold: newSettings.eliminationThreshold,\n          autoMode: newSettings.autoMode,\n          answerRevealTime: newSettings.answerRevealTime\n        } : null\n      };\n    case 'START_GAME':\n      {\n        if (state.questions.length === 0) return state;\n        const newState = {\n          ...state,\n          gameState: 'playing',\n          currentQuestionIndex: 0,\n          room: state.room ? {\n            ...state.room,\n            gameState: 'playing',\n            currentQuestionIndex: 0\n          } : null\n        };\n\n        // gameHostData ÏóÖÎç∞Ïù¥Ìä∏\n        const gameData = {\n          room: newState.room,\n          questions: newState.questions,\n          players: newState.players,\n          gameState: newState.gameState,\n          currentQuestionIndex: newState.currentQuestionIndex,\n          gameSettings: newState.gameSettings\n        };\n        localStorage.setItem('gameHostData', JSON.stringify(gameData));\n        console.log('üéÆ Í≤åÏûÑ ÏãúÏûë - gameHostData ÏóÖÎç∞Ïù¥Ìä∏Îê®');\n        return newState;\n      }\n    case 'PAUSE_GAME':\n      {\n        const newState = {\n          ...state,\n          gameState: 'paused',\n          room: state.room ? {\n            ...state.room,\n            gameState: 'paused'\n          } : null\n        };\n\n        // gameHostData ÏóÖÎç∞Ïù¥Ìä∏\n        const gameData = {\n          room: newState.room,\n          questions: newState.questions,\n          players: newState.players,\n          gameState: newState.gameState,\n          currentQuestionIndex: newState.currentQuestionIndex,\n          gameSettings: newState.gameSettings\n        };\n        localStorage.setItem('gameHostData', JSON.stringify(gameData));\n        console.log('‚è∏Ô∏è Í≤åÏûÑ ÏùºÏãúÏ†ïÏßÄ - gameHostData ÏóÖÎç∞Ïù¥Ìä∏Îê®');\n        return newState;\n      }\n    case 'RESUME_GAME':\n      {\n        const newState = {\n          ...state,\n          gameState: 'playing',\n          room: state.room ? {\n            ...state.room,\n            gameState: 'playing'\n          } : null\n        };\n\n        // gameHostData ÏóÖÎç∞Ïù¥Ìä∏\n        const gameData = {\n          room: newState.room,\n          questions: newState.questions,\n          players: newState.players,\n          gameState: newState.gameState,\n          currentQuestionIndex: newState.currentQuestionIndex,\n          gameSettings: newState.gameSettings\n        };\n        localStorage.setItem('gameHostData', JSON.stringify(gameData));\n        console.log('‚ñ∂Ô∏è Í≤åÏûÑ Ïû¨Í∞ú - gameHostData ÏóÖÎç∞Ïù¥Ìä∏Îê®');\n        return newState;\n      }\n    case 'NEXT_QUESTION':\n      {\n        const nextIndex = state.currentQuestionIndex + 1;\n        if (nextIndex >= state.questions.length) {\n          const finishedState = {\n            ...state,\n            gameState: 'finished',\n            room: state.room ? {\n              ...state.room,\n              gameState: 'finished'\n            } : null\n          };\n\n          // gameHostData ÏóÖÎç∞Ïù¥Ìä∏ (Í≤åÏûÑ Ï¢ÖÎ£å)\n          const gameData = {\n            room: finishedState.room,\n            questions: finishedState.questions,\n            players: finishedState.players,\n            gameState: finishedState.gameState,\n            currentQuestionIndex: finishedState.currentQuestionIndex,\n            gameSettings: finishedState.gameSettings\n          };\n          localStorage.setItem('gameHostData', JSON.stringify(gameData));\n          console.log('üèÅ Í≤åÏûÑ Ï¢ÖÎ£å - gameHostData ÏóÖÎç∞Ïù¥Ìä∏Îê®');\n          return finishedState;\n        }\n\n        // Î™®Îì† ÌîåÎ†àÏù¥Ïñ¥Ïùò Ï†úÏ∂ú ÏÉÅÌÉú Ï¥àÍ∏∞Ìôî\n        const resetPlayers = state.players.map(player => ({\n          ...player,\n          hasSubmitted: false,\n          currentAnswer: undefined\n        }));\n        const nextState = {\n          ...state,\n          gameState: 'playing',\n          currentQuestionIndex: nextIndex,\n          players: resetPlayers,\n          room: state.room ? {\n            ...state.room,\n            gameState: 'playing',\n            currentQuestionIndex: nextIndex,\n            players: resetPlayers\n          } : null\n        };\n\n        // gameHostData ÏóÖÎç∞Ïù¥Ìä∏ (Îã§Ïùå Î¨∏Ï†ú)\n        const gameData = {\n          room: nextState.room,\n          questions: nextState.questions,\n          players: nextState.players,\n          gameState: nextState.gameState,\n          currentQuestionIndex: nextState.currentQuestionIndex,\n          gameSettings: nextState.gameSettings\n        };\n        localStorage.setItem('gameHostData', JSON.stringify(gameData));\n        console.log('‚û°Ô∏è Îã§Ïùå Î¨∏Ï†ú - gameHostData ÏóÖÎç∞Ïù¥Ìä∏Îê®');\n        return nextState;\n      }\n    case 'END_GAME':\n      {\n        const endState = {\n          ...state,\n          gameState: 'finished',\n          room: state.room ? {\n            ...state.room,\n            gameState: 'finished'\n          } : null\n        };\n\n        // gameHostData ÏóÖÎç∞Ïù¥Ìä∏\n        const gameData = {\n          room: endState.room,\n          questions: endState.questions,\n          players: endState.players,\n          gameState: endState.gameState,\n          currentQuestionIndex: endState.currentQuestionIndex,\n          gameSettings: endState.gameSettings\n        };\n        localStorage.setItem('gameHostData', JSON.stringify(gameData));\n        console.log('üîö Í≤åÏûÑ Í∞ïÏ†ú Ï¢ÖÎ£å - gameHostData ÏóÖÎç∞Ïù¥Ìä∏Îê®');\n        return endState;\n      }\n    case 'UPDATE_PLAYER':\n      {\n        const updatedPlayers = state.players.map(player => player.id === action.payload.id ? action.payload : player);\n        return {\n          ...state,\n          players: updatedPlayers,\n          room: state.room ? {\n            ...state.room,\n            players: updatedPlayers\n          } : null\n        };\n      }\n    case 'ELIMINATE_PLAYER':\n      {\n        const eliminatedPlayers = state.players.map(player => player.id === action.payload ? {\n          ...player,\n          isEliminated: true\n        } : player);\n\n        // gameHostData ÏóÖÎç∞Ïù¥Ìä∏\n        const gameData = {\n          room: state.room ? {\n            ...state.room,\n            players: eliminatedPlayers\n          } : null,\n          questions: state.questions,\n          players: eliminatedPlayers,\n          gameState: state.gameState,\n          currentQuestionIndex: state.currentQuestionIndex,\n          gameSettings: state.gameSettings\n        };\n        localStorage.setItem('gameHostData', JSON.stringify(gameData));\n        return {\n          ...state,\n          players: eliminatedPlayers,\n          room: state.room ? {\n            ...state.room,\n            players: eliminatedPlayers\n          } : null\n        };\n      }\n    case 'REVIVE_PLAYER':\n      {\n        const revivedPlayers = state.players.map(player => player.id === action.payload ? {\n          ...player,\n          isEliminated: false\n        } : player);\n\n        // gameHostData ÏóÖÎç∞Ïù¥Ìä∏\n        const gameData = {\n          room: state.room ? {\n            ...state.room,\n            players: revivedPlayers\n          } : null,\n          questions: state.questions,\n          players: revivedPlayers,\n          gameState: state.gameState,\n          currentQuestionIndex: state.currentQuestionIndex,\n          gameSettings: state.gameSettings\n        };\n        localStorage.setItem('gameHostData', JSON.stringify(gameData));\n        return {\n          ...state,\n          players: revivedPlayers,\n          room: state.room ? {\n            ...state.room,\n            players: revivedPlayers\n          } : null\n        };\n      }\n    case 'SUBMIT_ANSWER':\n      {\n        const submittedPlayers = state.players.map(player => player.id === action.payload.playerId ? {\n          ...player,\n          hasSubmitted: true,\n          currentAnswer: action.payload.answer.toString()\n        } : player);\n\n        // gameHostData ÏóÖÎç∞Ïù¥Ìä∏\n        const gameData = {\n          room: state.room ? {\n            ...state.room,\n            players: submittedPlayers\n          } : null,\n          questions: state.questions,\n          players: submittedPlayers,\n          gameState: state.gameState,\n          currentQuestionIndex: state.currentQuestionIndex,\n          gameSettings: state.gameSettings\n        };\n        localStorage.setItem('gameHostData', JSON.stringify(gameData));\n        return {\n          ...state,\n          players: submittedPlayers,\n          room: state.room ? {\n            ...state.room,\n            players: submittedPlayers\n          } : null\n        };\n      }\n    case 'CLEAR_SUBMISSIONS':\n      {\n        const clearedPlayers = state.players.map(player => ({\n          ...player,\n          hasSubmitted: false,\n          currentAnswer: undefined\n        }));\n        return {\n          ...state,\n          players: clearedPlayers,\n          room: state.room ? {\n            ...state.room,\n            players: clearedPlayers\n          } : null\n        };\n      }\n    case 'SHOW_ANSWER':\n      {\n        const newState = {\n          ...state,\n          gameState: 'showingAnswer',\n          room: state.room ? {\n            ...state.room,\n            gameState: 'showingAnswer'\n          } : null\n        };\n\n        // gameHostData ÏóÖÎç∞Ïù¥Ìä∏\n        const gameData = {\n          room: newState.room,\n          questions: newState.questions,\n          players: newState.players,\n          gameState: newState.gameState,\n          currentQuestionIndex: newState.currentQuestionIndex,\n          gameSettings: newState.gameSettings\n        };\n        localStorage.setItem('gameHostData', JSON.stringify(gameData));\n        console.log('üí° Ï†ïÎãµ Í≥µÍ∞ú - gameHostData ÏóÖÎç∞Ïù¥Ìä∏Îê®');\n        return newState;\n      }\n    case 'RESET_GAME':\n      return {\n        ...initialState,\n        gameSettings: state.gameSettings\n      };\n    default:\n      return state;\n  }\n}\nconst GameContext = /*#__PURE__*/createContext(null);\nexport function GameProvider({\n  children\n}) {\n  _s();\n  const [state, dispatch] = useReducer(gameReducer, initialState);\n  return /*#__PURE__*/_jsxDEV(GameContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 559,\n    columnNumber: 5\n  }, this);\n}\n_s(GameProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = GameProvider;\nexport function useGameContext() {\n  _s2();\n  const context = useContext(GameContext);\n  if (!context) {\n    throw new Error('useGameContext must be used within a GameProvider');\n  }\n  return context;\n}\n_s2(useGameContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"GameProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","jsxDEV","_jsxDEV","initialState","room","questions","players","currentQuestionIndex","gameState","gameSettings","timeLimit","answerRevealTime","eliminationMode","eliminationThreshold","autoMode","currentPlayer","generateRoomCode","chars","result","i","charAt","Math","floor","random","length","gameReducer","state","action","type","newRoom","id","Date","now","toString","code","subject","payload","isPublic","hostId","publicRoom","playerCount","savedRooms","localStorage","getItem","existingRooms","JSON","parse","updatedRooms","setItem","stringify","console","log","tempRoom","roomCode","player","warn","playerExists","some","p","updatedPlayers","map","_state$room","gameData","nickname","newQuestions","filteredQuestions","filter","q","newSettings","newState","nextIndex","finishedState","resetPlayers","hasSubmitted","currentAnswer","undefined","nextState","endState","eliminatedPlayers","isEliminated","revivedPlayers","submittedPlayers","playerId","answer","clearedPlayers","GameContext","GameProvider","children","_s","dispatch","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGameContext","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/9204r/.cursor/avatar/src/contexts/GameContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, ReactNode } from 'react';\r\nimport { Question, Player, Room, GameSettings, GameState } from '../types/game';\r\n\r\ninterface AppState {\r\n  room: Room | null;\r\n  questions: Question[];\r\n  players: Player[];\r\n  currentQuestionIndex: number;\r\n  gameState: GameState;\r\n  gameSettings: GameSettings;\r\n  currentPlayer: Player | null;\r\n}\r\n\r\ntype GameAction =\r\n  | { type: 'CREATE_ROOM'; payload: { subject: string; isPublic: boolean; hostId: string } }\r\n  | { type: 'JOIN_ROOM'; payload: { roomCode: string; player: Player } }\r\n  | { type: 'ADD_QUESTION'; payload: Question }\r\n  | { type: 'DELETE_QUESTION'; payload: string }\r\n  | { type: 'REORDER_QUESTIONS'; payload: Question[] }\r\n  | { type: 'UPDATE_GAME_SETTINGS'; payload: Partial<GameSettings> }\r\n  | { type: 'START_GAME' }\r\n  | { type: 'PAUSE_GAME' }\r\n  | { type: 'RESUME_GAME' }\r\n  | { type: 'NEXT_QUESTION' }\r\n  | { type: 'END_GAME' }\r\n  | { type: 'UPDATE_PLAYER'; payload: Player }\r\n  | { type: 'ELIMINATE_PLAYER'; payload: string }\r\n  | { type: 'REVIVE_PLAYER'; payload: string }\r\n  | { type: 'SUBMIT_ANSWER'; payload: { playerId: string; answer: string | number } }\r\n  | { type: 'CLEAR_SUBMISSIONS' }\r\n  | { type: 'SHOW_ANSWER' }\r\n  | { type: 'RESET_GAME' };\r\n\r\nconst initialState: AppState = {\r\n  room: null,\r\n  questions: [],\r\n  players: [],\r\n  currentQuestionIndex: 0,\r\n  gameState: 'waiting',\r\n  gameSettings: {\r\n    timeLimit: 5,\r\n    answerRevealTime: 5,\r\n    eliminationMode: false,\r\n    eliminationThreshold: 3,\r\n    autoMode: true\r\n  },\r\n  currentPlayer: null\r\n};\r\n\r\nfunction generateRoomCode(): string {\r\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r\n  let result = '';\r\n  for (let i = 0; i < 4; i++) {\r\n    result += chars.charAt(Math.floor(Math.random() * chars.length));\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction gameReducer(state: AppState, action: GameAction): AppState {\r\n  switch (action.type) {\r\n    case 'CREATE_ROOM': {\r\n      const newRoom: Room = {\r\n        id: Date.now().toString(),\r\n        code: generateRoomCode(),\r\n        subject: action.payload.subject,\r\n        isPublic: action.payload.isPublic,\r\n        hostId: action.payload.hostId,\r\n        players: [],\r\n        questions: [],\r\n        currentQuestionIndex: 0,\r\n        gameState: 'waiting',\r\n        eliminationMode: state.gameSettings.eliminationMode,\r\n        eliminationThreshold: state.gameSettings.eliminationThreshold,\r\n        autoMode: state.gameSettings.autoMode,\r\n        answerRevealTime: state.gameSettings.answerRevealTime\r\n      };\r\n      \r\n      // Í≥µÍ∞úÎ∞©Ïù¥Î©¥ localStorageÏóê Ï†ÄÏû•\r\n      if (action.payload.isPublic) {\r\n        const publicRoom = {\r\n          id: newRoom.id,\r\n          code: newRoom.code,\r\n          subject: newRoom.subject,\r\n          isPublic: true,\r\n          playerCount: 0\r\n        };\r\n        \r\n        const savedRooms = localStorage.getItem('publicRooms');\r\n        const existingRooms = savedRooms ? JSON.parse(savedRooms) : [];\r\n        const updatedRooms = [...existingRooms, publicRoom];\r\n        localStorage.setItem('publicRooms', JSON.stringify(updatedRooms));\r\n        \r\n        console.log('üî• Í≥µÍ∞úÎ∞© Ï†ÄÏû•Îê®:', publicRoom);\r\n        console.log('üìã ÌòÑÏû¨ Í≥µÍ∞úÎ∞© Î™©Î°ù:', updatedRooms);\r\n      }\r\n      \r\n      return {\r\n        ...state,\r\n        room: newRoom\r\n      };\r\n    }\r\n\r\n    case 'JOIN_ROOM': {\r\n      // Î∞©Ïù¥ ÏóÜÎäî Í≤ΩÏö∞ ÏûÑÏãúÎ°ú Î∞©ÏùÑ ÏÉùÏÑ± (Ïã§Ï†úÎ°úÎäî ÏÑúÎ≤ÑÏóêÏÑú Î∞©ÏùÑ Ï∞æÏïÑÏïº Ìï®)\r\n      if (!state.room) {\r\n        // ÏûÑÏãú Î∞© ÏÉùÏÑ± Î°úÏßÅ - Ïã§Ï†úÎ°úÎäî ÏÑúÎ≤ÑÏóêÏÑú Î∞© Ï†ïÎ≥¥Î•º Í∞ÄÏ†∏ÏôÄÏïº Ìï®\r\n        const tempRoom = {\r\n          id: 'temp_room',\r\n          code: action.payload.roomCode,\r\n          subject: 'ÏûÑÏãú Î∞©',\r\n          isPublic: false,\r\n          hostId: 'temp_host',\r\n          players: [action.payload.player],\r\n          questions: [],\r\n          currentQuestionIndex: 0,\r\n          gameState: 'waiting' as const,\r\n          eliminationMode: false,\r\n          eliminationThreshold: 3,\r\n          autoMode: true,\r\n          answerRevealTime: 5\r\n        };\r\n        return {\r\n          ...state,\r\n          room: tempRoom,\r\n          players: [action.payload.player]\r\n        };\r\n      }\r\n      \r\n      // ÏΩîÎìúÍ∞Ä Îã§Î•¥Î©¥ Î¨¥Ïãú (Ïã§Ï†úÎ°úÎäî ÏÑúÎ≤ÑÏóêÏÑú Í≤ÄÏ¶ù)\r\n      if (state.room.code !== action.payload.roomCode) {\r\n        console.warn('Î∞© ÏΩîÎìúÍ∞Ä ÏùºÏπòÌïòÏßÄ ÏïäÏäµÎãàÎã§:', state.room.code, 'vs', action.payload.roomCode);\r\n        return state;\r\n      }\r\n      \r\n      const playerExists = state.players.some(p => p.id === action.payload.player.id);\r\n      if (playerExists) {\r\n        return state; // Ïù¥ÎØ∏ Ï∞∏Ïó¨Ìïú ÌîåÎ†àÏù¥Ïñ¥Î©¥ Î¨¥Ïãú\r\n      }\r\n      \r\n      const updatedPlayers = [...state.players, action.payload.player];\r\n      \r\n      // Í≥µÍ∞úÎ∞©Ïù¥Î©¥ localStorageÏùò ÌîåÎ†àÏù¥Ïñ¥ Ïàò ÏóÖÎç∞Ïù¥Ìä∏\r\n      if (state.room && state.room.isPublic) {\r\n        const savedRooms = localStorage.getItem('publicRooms');\r\n        if (savedRooms) {\r\n          const existingRooms = JSON.parse(savedRooms);\r\n          const updatedRooms = existingRooms.map((room: any) => \r\n            room.code === state.room?.code \r\n              ? { ...room, playerCount: updatedPlayers.length }\r\n              : room\r\n          );\r\n          localStorage.setItem('publicRooms', JSON.stringify(updatedRooms));\r\n        }\r\n      }\r\n\r\n      // Í≤åÏûÑ ÏßÑÌñâÌéòÏù¥ÏßÄÎ•º ÏúÑÌïú localStorage ÏóÖÎç∞Ïù¥Ìä∏ (ÏÉà ÌÉ≠ ÎèôÍ∏∞Ìôî)\r\n      const gameData = {\r\n        room: state.room ? {\r\n          ...state.room,\r\n          players: updatedPlayers\r\n        } : null,\r\n        questions: state.questions,\r\n        players: updatedPlayers,\r\n        gameState: state.gameState,\r\n        currentQuestionIndex: state.currentQuestionIndex,\r\n        gameSettings: state.gameSettings\r\n      };\r\n      localStorage.setItem('gameHostData', JSON.stringify(gameData));\r\n      console.log('üîÑ gameHostData ÏóÖÎç∞Ïù¥Ìä∏Îê® - ÌîåÎ†àÏù¥Ïñ¥ Ï∂îÍ∞Ä:', action.payload.player.nickname);\r\n      \r\n      return {\r\n        ...state,\r\n        players: updatedPlayers,\r\n        room: {\r\n          ...state.room,\r\n          players: updatedPlayers\r\n        }\r\n      };\r\n    }\r\n\r\n    case 'ADD_QUESTION': {\r\n      const newQuestions = [...state.questions, action.payload];\r\n      return {\r\n        ...state,\r\n        questions: newQuestions,\r\n        room: state.room ? {\r\n          ...state.room,\r\n          questions: newQuestions\r\n        } : null\r\n      };\r\n    }\r\n\r\n    case 'DELETE_QUESTION': {\r\n      const filteredQuestions = state.questions.filter(q => q.id !== action.payload);\r\n      return {\r\n        ...state,\r\n        questions: filteredQuestions,\r\n        room: state.room ? {\r\n          ...state.room,\r\n          questions: filteredQuestions\r\n        } : null\r\n      };\r\n    }\r\n\r\n    case 'REORDER_QUESTIONS':\r\n      return {\r\n        ...state,\r\n        questions: action.payload,\r\n        room: state.room ? {\r\n          ...state.room,\r\n          questions: action.payload\r\n        } : null\r\n      };\r\n\r\n    case 'UPDATE_GAME_SETTINGS':\r\n      const newSettings = { ...state.gameSettings, ...action.payload };\r\n      return {\r\n        ...state,\r\n        gameSettings: newSettings,\r\n        room: state.room ? {\r\n          ...state.room,\r\n          eliminationMode: newSettings.eliminationMode,\r\n          eliminationThreshold: newSettings.eliminationThreshold,\r\n          autoMode: newSettings.autoMode,\r\n          answerRevealTime: newSettings.answerRevealTime\r\n        } : null\r\n      };\r\n\r\n    case 'START_GAME': {\r\n      if (state.questions.length === 0) return state;\r\n      \r\n      const newState = {\r\n        ...state,\r\n        gameState: 'playing' as const,\r\n        currentQuestionIndex: 0,\r\n        room: state.room ? {\r\n          ...state.room,\r\n          gameState: 'playing' as const,\r\n          currentQuestionIndex: 0\r\n        } : null\r\n      };\r\n      \r\n      // gameHostData ÏóÖÎç∞Ïù¥Ìä∏\r\n      const gameData = {\r\n        room: newState.room,\r\n        questions: newState.questions,\r\n        players: newState.players,\r\n        gameState: newState.gameState,\r\n        currentQuestionIndex: newState.currentQuestionIndex,\r\n        gameSettings: newState.gameSettings\r\n      };\r\n      localStorage.setItem('gameHostData', JSON.stringify(gameData));\r\n      console.log('üéÆ Í≤åÏûÑ ÏãúÏûë - gameHostData ÏóÖÎç∞Ïù¥Ìä∏Îê®');\r\n      \r\n      return newState;\r\n    }\r\n\r\n    case 'PAUSE_GAME': {\r\n      const newState = {\r\n        ...state,\r\n        gameState: 'paused' as const,\r\n        room: state.room ? {\r\n          ...state.room,\r\n          gameState: 'paused' as const\r\n        } : null\r\n      };\r\n      \r\n      // gameHostData ÏóÖÎç∞Ïù¥Ìä∏\r\n      const gameData = {\r\n        room: newState.room,\r\n        questions: newState.questions,\r\n        players: newState.players,\r\n        gameState: newState.gameState,\r\n        currentQuestionIndex: newState.currentQuestionIndex,\r\n        gameSettings: newState.gameSettings\r\n      };\r\n      localStorage.setItem('gameHostData', JSON.stringify(gameData));\r\n      console.log('‚è∏Ô∏è Í≤åÏûÑ ÏùºÏãúÏ†ïÏßÄ - gameHostData ÏóÖÎç∞Ïù¥Ìä∏Îê®');\r\n      \r\n      return newState;\r\n    }\r\n\r\n    case 'RESUME_GAME': {\r\n      const newState = {\r\n        ...state,\r\n        gameState: 'playing' as const,\r\n        room: state.room ? {\r\n          ...state.room,\r\n          gameState: 'playing' as const\r\n        } : null\r\n      };\r\n      \r\n      // gameHostData ÏóÖÎç∞Ïù¥Ìä∏\r\n      const gameData = {\r\n        room: newState.room,\r\n        questions: newState.questions,\r\n        players: newState.players,\r\n        gameState: newState.gameState,\r\n        currentQuestionIndex: newState.currentQuestionIndex,\r\n        gameSettings: newState.gameSettings\r\n      };\r\n      localStorage.setItem('gameHostData', JSON.stringify(gameData));\r\n      console.log('‚ñ∂Ô∏è Í≤åÏûÑ Ïû¨Í∞ú - gameHostData ÏóÖÎç∞Ïù¥Ìä∏Îê®');\r\n      \r\n      return newState;\r\n    }\r\n\r\n    case 'NEXT_QUESTION': {\r\n      const nextIndex = state.currentQuestionIndex + 1;\r\n      if (nextIndex >= state.questions.length) {\r\n        const finishedState = {\r\n          ...state,\r\n          gameState: 'finished' as const,\r\n          room: state.room ? {\r\n            ...state.room,\r\n            gameState: 'finished' as const\r\n          } : null\r\n        };\r\n        \r\n        // gameHostData ÏóÖÎç∞Ïù¥Ìä∏ (Í≤åÏûÑ Ï¢ÖÎ£å)\r\n        const gameData = {\r\n          room: finishedState.room,\r\n          questions: finishedState.questions,\r\n          players: finishedState.players,\r\n          gameState: finishedState.gameState,\r\n          currentQuestionIndex: finishedState.currentQuestionIndex,\r\n          gameSettings: finishedState.gameSettings\r\n        };\r\n        localStorage.setItem('gameHostData', JSON.stringify(gameData));\r\n        console.log('üèÅ Í≤åÏûÑ Ï¢ÖÎ£å - gameHostData ÏóÖÎç∞Ïù¥Ìä∏Îê®');\r\n        \r\n        return finishedState;\r\n      }\r\n      \r\n      // Î™®Îì† ÌîåÎ†àÏù¥Ïñ¥Ïùò Ï†úÏ∂ú ÏÉÅÌÉú Ï¥àÍ∏∞Ìôî\r\n      const resetPlayers = state.players.map(player => ({\r\n        ...player,\r\n        hasSubmitted: false,\r\n        currentAnswer: undefined\r\n      }));\r\n      \r\n      const nextState = {\r\n        ...state,\r\n        gameState: 'playing' as const,\r\n        currentQuestionIndex: nextIndex,\r\n        players: resetPlayers,\r\n        room: state.room ? {\r\n          ...state.room,\r\n          gameState: 'playing' as const,\r\n          currentQuestionIndex: nextIndex,\r\n          players: resetPlayers\r\n        } : null\r\n      };\r\n      \r\n      // gameHostData ÏóÖÎç∞Ïù¥Ìä∏ (Îã§Ïùå Î¨∏Ï†ú)\r\n      const gameData = {\r\n        room: nextState.room,\r\n        questions: nextState.questions,\r\n        players: nextState.players,\r\n        gameState: nextState.gameState,\r\n        currentQuestionIndex: nextState.currentQuestionIndex,\r\n        gameSettings: nextState.gameSettings\r\n      };\r\n      localStorage.setItem('gameHostData', JSON.stringify(gameData));\r\n      console.log('‚û°Ô∏è Îã§Ïùå Î¨∏Ï†ú - gameHostData ÏóÖÎç∞Ïù¥Ìä∏Îê®');\r\n      \r\n      return nextState;\r\n    }\r\n\r\n    case 'END_GAME': {\r\n      const endState = {\r\n        ...state,\r\n        gameState: 'finished' as const,\r\n        room: state.room ? {\r\n          ...state.room,\r\n          gameState: 'finished' as const\r\n        } : null\r\n      };\r\n      \r\n      // gameHostData ÏóÖÎç∞Ïù¥Ìä∏\r\n      const gameData = {\r\n        room: endState.room,\r\n        questions: endState.questions,\r\n        players: endState.players,\r\n        gameState: endState.gameState,\r\n        currentQuestionIndex: endState.currentQuestionIndex,\r\n        gameSettings: endState.gameSettings\r\n      };\r\n      localStorage.setItem('gameHostData', JSON.stringify(gameData));\r\n      console.log('üîö Í≤åÏûÑ Í∞ïÏ†ú Ï¢ÖÎ£å - gameHostData ÏóÖÎç∞Ïù¥Ìä∏Îê®');\r\n      \r\n      return endState;\r\n    }\r\n\r\n    case 'UPDATE_PLAYER': {\r\n      const updatedPlayers = state.players.map(player =>\r\n        player.id === action.payload.id ? action.payload : player\r\n      );\r\n      return {\r\n        ...state,\r\n        players: updatedPlayers,\r\n        room: state.room ? {\r\n          ...state.room,\r\n          players: updatedPlayers\r\n        } : null\r\n      };\r\n    }\r\n\r\n    case 'ELIMINATE_PLAYER': {\r\n      const eliminatedPlayers = state.players.map(player =>\r\n        player.id === action.payload ? { ...player, isEliminated: true } : player\r\n      );\r\n      \r\n      // gameHostData ÏóÖÎç∞Ïù¥Ìä∏\r\n      const gameData = {\r\n        room: state.room ? {\r\n          ...state.room,\r\n          players: eliminatedPlayers\r\n        } : null,\r\n        questions: state.questions,\r\n        players: eliminatedPlayers,\r\n        gameState: state.gameState,\r\n        currentQuestionIndex: state.currentQuestionIndex,\r\n        gameSettings: state.gameSettings\r\n      };\r\n      localStorage.setItem('gameHostData', JSON.stringify(gameData));\r\n      \r\n      return {\r\n        ...state,\r\n        players: eliminatedPlayers,\r\n        room: state.room ? {\r\n          ...state.room,\r\n          players: eliminatedPlayers\r\n        } : null\r\n      };\r\n    }\r\n\r\n    case 'REVIVE_PLAYER': {\r\n      const revivedPlayers = state.players.map(player =>\r\n        player.id === action.payload ? { ...player, isEliminated: false } : player\r\n      );\r\n      \r\n      // gameHostData ÏóÖÎç∞Ïù¥Ìä∏\r\n      const gameData = {\r\n        room: state.room ? {\r\n          ...state.room,\r\n          players: revivedPlayers\r\n        } : null,\r\n        questions: state.questions,\r\n        players: revivedPlayers,\r\n        gameState: state.gameState,\r\n        currentQuestionIndex: state.currentQuestionIndex,\r\n        gameSettings: state.gameSettings\r\n      };\r\n      localStorage.setItem('gameHostData', JSON.stringify(gameData));\r\n      \r\n      return {\r\n        ...state,\r\n        players: revivedPlayers,\r\n        room: state.room ? {\r\n          ...state.room,\r\n          players: revivedPlayers\r\n        } : null\r\n      };\r\n    }\r\n\r\n    case 'SUBMIT_ANSWER': {\r\n      const submittedPlayers = state.players.map(player =>\r\n        player.id === action.payload.playerId\r\n          ? { ...player, hasSubmitted: true, currentAnswer: action.payload.answer.toString() }\r\n          : player\r\n      );\r\n      \r\n      // gameHostData ÏóÖÎç∞Ïù¥Ìä∏\r\n      const gameData = {\r\n        room: state.room ? {\r\n          ...state.room,\r\n          players: submittedPlayers\r\n        } : null,\r\n        questions: state.questions,\r\n        players: submittedPlayers,\r\n        gameState: state.gameState,\r\n        currentQuestionIndex: state.currentQuestionIndex,\r\n        gameSettings: state.gameSettings\r\n      };\r\n      localStorage.setItem('gameHostData', JSON.stringify(gameData));\r\n      \r\n      return {\r\n        ...state,\r\n        players: submittedPlayers,\r\n        room: state.room ? {\r\n          ...state.room,\r\n          players: submittedPlayers\r\n        } : null\r\n      };\r\n    }\r\n\r\n    case 'CLEAR_SUBMISSIONS': {\r\n      const clearedPlayers = state.players.map(player => ({\r\n        ...player,\r\n        hasSubmitted: false,\r\n        currentAnswer: undefined\r\n      }));\r\n      return {\r\n        ...state,\r\n        players: clearedPlayers,\r\n        room: state.room ? {\r\n          ...state.room,\r\n          players: clearedPlayers\r\n        } : null\r\n      };\r\n    }\r\n\r\n    case 'SHOW_ANSWER': {\r\n      const newState = {\r\n        ...state,\r\n        gameState: 'showingAnswer' as const,\r\n        room: state.room ? {\r\n          ...state.room,\r\n          gameState: 'showingAnswer' as const\r\n        } : null\r\n      };\r\n      \r\n      // gameHostData ÏóÖÎç∞Ïù¥Ìä∏\r\n      const gameData = {\r\n        room: newState.room,\r\n        questions: newState.questions,\r\n        players: newState.players,\r\n        gameState: newState.gameState,\r\n        currentQuestionIndex: newState.currentQuestionIndex,\r\n        gameSettings: newState.gameSettings\r\n      };\r\n      localStorage.setItem('gameHostData', JSON.stringify(gameData));\r\n      console.log('üí° Ï†ïÎãµ Í≥µÍ∞ú - gameHostData ÏóÖÎç∞Ïù¥Ìä∏Îê®');\r\n      \r\n      return newState;\r\n    }\r\n\r\n    case 'RESET_GAME':\r\n      return {\r\n        ...initialState,\r\n        gameSettings: state.gameSettings\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst GameContext = createContext<{\r\n  state: AppState;\r\n  dispatch: React.Dispatch<GameAction>;\r\n} | null>(null);\r\n\r\nexport function GameProvider({ children }: { children: ReactNode }) {\r\n  const [state, dispatch] = useReducer(gameReducer, initialState);\r\n\r\n  return (\r\n    <GameContext.Provider value={{ state, dispatch }}>\r\n      {children}\r\n    </GameContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useGameContext() {\r\n  const context = useContext(GameContext);\r\n  if (!context) {\r\n    throw new Error('useGameContext must be used within a GameProvider');\r\n  }\r\n  return context;\r\n}\r\n\r\nexport type { GameAction };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}