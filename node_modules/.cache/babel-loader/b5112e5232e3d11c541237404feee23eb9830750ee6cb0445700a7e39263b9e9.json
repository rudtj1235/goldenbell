{"ast":null,"code":"const KEY_STORAGE='gemini_api_key';export const setGeminiKey=k=>{localStorage.setItem(KEY_STORAGE,(k||'').trim());};export const getGeminiKey=()=>{return localStorage.getItem(KEY_STORAGE)||'';};export async function generateQuestionsWithGemini(prompt){var _data$candidates,_data$candidates$,_data$candidates$$con,_data$candidates$$con2,_data$candidates$$con3;let count=arguments.length>1&&arguments[1]!==undefined?arguments[1]:10;const apiKey=getGeminiKey();if(!apiKey)throw new Error('Gemini API 키가 없습니다.');const model='gemini-1.5-flash';// 2022 교육과정 준수 + 모호어(소수) 해석 규칙 + 개수 강제\nconst sys=\"\\uC5ED\\uD560: \\uB2F9\\uC2E0\\uC740 \\uB300\\uD55C\\uBBFC\\uAD6D \\\"2022 \\uAC1C\\uC815 \\uAD50\\uC721\\uACFC\\uC815\\\" \\uAE30\\uBC18\\uC758 \\uD559\\uC2B5\\uC6A9 \\uBB38\\uC81C \\uC81C\\uC791\\uC790\\uC785\\uB2C8\\uB2E4.\\n\\uADDC\\uCE59:\\n- \\uBC18\\uB4DC\\uC2DC \\\"2022 \\uAC1C\\uC815 \\uAD50\\uC721\\uACFC\\uC815\\\"\\uC758 \\uC131\\uCDE8\\uAE30\\uC900/\\uD559\\uB144 \\uC801\\uD569\\uC131\\uC744 \\uC900\\uC218\\uD574 \\uCD9C\\uC81C\\uD558\\uC138\\uC694.\\n- \\uC0AC\\uC6A9\\uC790\\uC758 \\uC694\\uCCAD(\\uD559\\uB144/\\uC8FC\\uC81C/\\uD615\\uC2DD/\\uAC1C\\uC218)\\uC744 \\uD574\\uC11D\\uD574 \\uC801\\uC808\\uD55C \\uB09C\\uC774\\uB3C4\\uC640 \\uD45C\\uD604\\uC73C\\uB85C \\uD55C\\uAD6D\\uC5B4 \\uBB38\\uC81C\\uB97C \\uB9CC\\uB4ED\\uB2C8\\uB2E4.\\n- \\\"\\uC18C\\uC218\\\"\\uAC00 \\uCD08\\uB4F1 \\uB9E5\\uB77D\\uC774\\uBA74 \\uAE30\\uBCF8\\uC801\\uC73C\\uB85C \\\"\\uC18C\\uC218(Decimal, \\uC18C\\uC218\\uC810)\\\"\\uB85C \\uD574\\uC11D\\uD558\\uC138\\uC694. \\\"\\uC18C\\uC218(Prime)\\\"\\uAC00 \\uD544\\uC694\\uD558\\uBA74 \\uC694\\uCCAD\\uC5D0 '\\uC18C\\uC218(\\uC18C\\uC218: prime)'\\uCC98\\uB7FC \\uBD84\\uBA85\\uD788 \\uBA85\\uC2DC\\uB418\\uC5B4\\uC57C \\uD569\\uB2C8\\uB2E4.\\n- \\uCD9C\\uB825\\uC740 \\uC544\\uB798 JSON \\uBC30\\uC5F4\\uB9CC \\uD5C8\\uC6A9(\\uC124\\uBA85/\\uCF54\\uB4DC\\uBE14\\uB85D/\\uCD94\\uAC00 \\uBB38\\uC7A5 \\uAE08\\uC9C0).\\n- \\uAC01 \\uD56D\\uBAA9\\uC740 { \\\"type\\\":\\\"ox|multiple|short\\\", \\\"question\\\":\\\"...\\\", \\\"options\\\":[...], \\\"correctAnswer\\\":\\\"...|index\\\", \\\"score\\\":10 } \\uD615\\uD0DC.\\n  * multiple\\uC740 options \\uD544\\uC218, correctAnswer\\uB294 0\\uBD80\\uD130 \\uC2DC\\uC791\\uD558\\uB294 \\uC815\\uB2F5 index\\n  * ox\\uB294 options \\uC5C6\\uC774 correctAnswer\\uB294 \\\"O\\\" \\uB610\\uB294 \\\"X\\\"\\n  * short\\uB294 correctAnswer\\uB294 \\uBB38\\uC790\\uC5F4 \\uC815\\uB2F5\\n- \\uBB38\\uC790\\uC5F4 \\uB0B4 \\uAC1C\\uD589/\\uB530\\uC634\\uD45C\\uB294 \\uC774\\uC2A4\\uCF00\\uC774\\uD504 \\uCC98\\uB9AC\\n- \\uBC18\\uB4DC\\uC2DC length=\".concat(count,\" \\uC815\\uD655\\uD788 \\uB9DE\\uCD94\\uC138\\uC694.\");const user=\"\\uC0AC\\uC6A9\\uC790 \\uC694\\uCCAD: \".concat(prompt,\"\\n\\uC6D0\\uD558\\uB294 \\uAC1C\\uC218: \").concat(count,\"\\n\\uCD9C\\uB825 \\uD615\\uC2DD: \\uC704 JSON \\uBC30\\uC5F4\\uB9CC \\uBC18\\uD658\");const responseSchema={type:'ARRAY',items:{type:'OBJECT',properties:{id:{type:'STRING'},type:{type:'STRING'},question:{type:'STRING'},options:{type:'ARRAY',items:{type:'STRING'}},correctAnswer:{type:'STRING'},score:{type:'NUMBER'}},required:['type','question','correctAnswer']}};const body={contents:[{role:'user',parts:[{text:sys}]},{role:'user',parts:[{text:user}]}],generationConfig:{responseMimeType:'application/json',responseSchema}};console.info('[AI_GEN] ▶ 요청 시작',{model,count,prompt});const res=await fetch(\"https://generativelanguage.googleapis.com/v1beta/models/\".concat(model,\":generateContent?key=\").concat(encodeURIComponent(apiKey)),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(body)});if(!res.ok){console.warn('[AI_GEN] ✖ 응답 실패',{status:res.status,statusText:res.statusText});throw new Error('Gemini 호출 실패');}const data=await res.json();let text=(data===null||data===void 0?void 0:(_data$candidates=data.candidates)===null||_data$candidates===void 0?void 0:(_data$candidates$=_data$candidates[0])===null||_data$candidates$===void 0?void 0:(_data$candidates$$con=_data$candidates$.content)===null||_data$candidates$$con===void 0?void 0:(_data$candidates$$con2=_data$candidates$$con.parts)===null||_data$candidates$$con2===void 0?void 0:(_data$candidates$$con3=_data$candidates$$con2[0])===null||_data$candidates$$con3===void 0?void 0:_data$candidates$$con3.text)||'';console.info('[AI_GEN] ◀ 원문 수신',{length:text.length,preview:text.slice(0,300)});// code fence 제거\nif(text.startsWith('```')){const first=text.indexOf('\\n');const lastFence=text.lastIndexOf('```');if(first!==-1&&lastFence!==-1)text=text.slice(first+1,lastFence);}let parsed;try{parsed=JSON.parse(text);}catch(_unused){console.warn('[AI_GEN] ⚠ JSON 파싱 재시도(부분 추출)');const jsonStart=text.indexOf('[');const jsonEnd=text.lastIndexOf(']');if(jsonStart===-1||jsonEnd===-1)throw new Error('AI 응답 파싱 실패');parsed=JSON.parse(text.slice(jsonStart,jsonEnd+1));}const arr=Array.isArray(parsed)?parsed:[parsed];console.info('[AI_GEN] ✅ 파싱 완료',{returned:arr.length});const isValidItem=q=>q&&['ox','multiple','short'].includes(q.type)&&typeof q.question==='string'&&(q.type!=='multiple'||Array.isArray(q.options));let items=arr.filter(isValidItem);console.info('[AI_GEN] 🔎 유효 항목 필터링',{valid:items.length,requested:count});if(items.length>count)items=items.slice(0,count);if(items.length<count){console.warn('[AI_GEN] ✖ 개수 부족',{valid:items.length,requested:count});throw new Error(\"AI\\uAC00 \".concat(items.length,\"\\uAC1C\\uB9CC \\uBC18\\uD658\\uD588\\uC2B5\\uB2C8\\uB2E4. \\uD504\\uB86C\\uD504\\uD2B8\\uB97C \\uC870\\uAE08 \\uB354 \\uAD6C\\uCCB4\\uC801\\uC73C\\uB85C \\uC785\\uB825\\uD558\\uAC70\\uB098 \\uB2E4\\uC2DC \\uC2DC\\uB3C4\\uD558\\uC138\\uC694.\"));}return items.map((q,i)=>({id:q.id||\"ai_\".concat(Date.now(),\"_\").concat(i),type:q.type,question:q.question,options:q.options,correctAnswer:q.correctAnswer,score:typeof q.score==='number'?q.score:10}));}","map":{"version":3,"names":["KEY_STORAGE","setGeminiKey","k","localStorage","setItem","trim","getGeminiKey","getItem","generateQuestionsWithGemini","prompt","_data$candidates","_data$candidates$","_data$candidates$$con","_data$candidates$$con2","_data$candidates$$con3","count","arguments","length","undefined","apiKey","Error","model","sys","concat","user","responseSchema","type","items","properties","id","question","options","correctAnswer","score","required","body","contents","role","parts","text","generationConfig","responseMimeType","console","info","res","fetch","encodeURIComponent","method","headers","JSON","stringify","ok","warn","status","statusText","data","json","candidates","content","preview","slice","startsWith","first","indexOf","lastFence","lastIndexOf","parsed","parse","_unused","jsonStart","jsonEnd","arr","Array","isArray","returned","isValidItem","q","includes","filter","valid","requested","map","i","Date","now"],"sources":["C:/Users/9204r/.cursor/avatar/src/services/ai.ts"],"sourcesContent":["export type AiQuestion = {\n  id?: string;\n  type: 'ox' | 'multiple' | 'short';\n  question: string;\n  options?: string[];\n  correctAnswer: string | number;\n  score?: number;\n};\n\nconst KEY_STORAGE = 'gemini_api_key';\n\nexport const setGeminiKey = (k: string) => {\n  localStorage.setItem(KEY_STORAGE, (k || '').trim());\n};\n\nexport const getGeminiKey = (): string => {\n  return localStorage.getItem(KEY_STORAGE) || '';\n};\n\nexport async function generateQuestionsWithGemini(prompt: string, count = 10): Promise<AiQuestion[]> {\n  const apiKey = getGeminiKey();\n  if (!apiKey) throw new Error('Gemini API 키가 없습니다.');\n\n  const model = 'gemini-1.5-flash';\n\n  // 2022 교육과정 준수 + 모호어(소수) 해석 규칙 + 개수 강제\n  const sys = `역할: 당신은 대한민국 \"2022 개정 교육과정\" 기반의 학습용 문제 제작자입니다.\n규칙:\n- 반드시 \"2022 개정 교육과정\"의 성취기준/학년 적합성을 준수해 출제하세요.\n- 사용자의 요청(학년/주제/형식/개수)을 해석해 적절한 난이도와 표현으로 한국어 문제를 만듭니다.\n- \"소수\"가 초등 맥락이면 기본적으로 \"소수(Decimal, 소수점)\"로 해석하세요. \"소수(Prime)\"가 필요하면 요청에 '소수(소수: prime)'처럼 분명히 명시되어야 합니다.\n- 출력은 아래 JSON 배열만 허용(설명/코드블록/추가 문장 금지).\n- 각 항목은 { \"type\":\"ox|multiple|short\", \"question\":\"...\", \"options\":[...], \"correctAnswer\":\"...|index\", \"score\":10 } 형태.\n  * multiple은 options 필수, correctAnswer는 0부터 시작하는 정답 index\n  * ox는 options 없이 correctAnswer는 \"O\" 또는 \"X\"\n  * short는 correctAnswer는 문자열 정답\n- 문자열 내 개행/따옴표는 이스케이프 처리\n- 반드시 length=${count} 정확히 맞추세요.`;\n\n  const user = `사용자 요청: ${prompt}\\n원하는 개수: ${count}\\n출력 형식: 위 JSON 배열만 반환`;\n\n  const responseSchema = {\n    type: 'ARRAY',\n    items: {\n      type: 'OBJECT',\n      properties: {\n        id: { type: 'STRING' },\n        type: { type: 'STRING' },\n        question: { type: 'STRING' },\n        options: { type: 'ARRAY', items: { type: 'STRING' } },\n        correctAnswer: { type: 'STRING' },\n        score: { type: 'NUMBER' }\n      },\n      required: ['type', 'question', 'correctAnswer']\n    }\n  } as any;\n\n  const body = {\n    contents: [\n      { role: 'user', parts: [{ text: sys }] },\n      { role: 'user', parts: [{ text: user }] }\n    ],\n    generationConfig: {\n      responseMimeType: 'application/json',\n      responseSchema\n    }\n  } as any;\n\n  console.info('[AI_GEN] ▶ 요청 시작', { model, count, prompt });\n\n  const res = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/${model}:generateContent?key=${encodeURIComponent(apiKey)}` , {\n    method: 'POST',\n    headers: { 'Content-Type':'application/json' },\n    body: JSON.stringify(body),\n  });\n  if (!res.ok) {\n    console.warn('[AI_GEN] ✖ 응답 실패', { status: res.status, statusText: res.statusText });\n    throw new Error('Gemini 호출 실패');\n  }\n  const data = await res.json();\n\n  let text: string = data?.candidates?.[0]?.content?.parts?.[0]?.text || '';\n  console.info('[AI_GEN] ◀ 원문 수신', { length: text.length, preview: text.slice(0, 300) });\n  // code fence 제거\n  if (text.startsWith('```')) {\n    const first = text.indexOf('\\n');\n    const lastFence = text.lastIndexOf('```');\n    if (first !== -1 && lastFence !== -1) text = text.slice(first + 1, lastFence);\n  }\n  let parsed: any;\n  try {\n    parsed = JSON.parse(text);\n  } catch {\n    console.warn('[AI_GEN] ⚠ JSON 파싱 재시도(부분 추출)');\n    const jsonStart = text.indexOf('[');\n    const jsonEnd = text.lastIndexOf(']');\n    if (jsonStart === -1 || jsonEnd === -1) throw new Error('AI 응답 파싱 실패');\n    parsed = JSON.parse(text.slice(jsonStart, jsonEnd + 1));\n  }\n  const arr: any[] = Array.isArray(parsed) ? parsed : [parsed];\n  console.info('[AI_GEN] ✅ 파싱 완료', { returned: arr.length });\n  const isValidItem = (q: any) => q && ['ox','multiple','short'].includes(q.type) && typeof q.question === 'string' && (q.type !== 'multiple' || Array.isArray(q.options));\n  let items = arr.filter(isValidItem);\n  console.info('[AI_GEN] 🔎 유효 항목 필터링', { valid: items.length, requested: count });\n  if (items.length > count) items = items.slice(0, count);\n  if (items.length < count) {\n    console.warn('[AI_GEN] ✖ 개수 부족', { valid: items.length, requested: count });\n    throw new Error(`AI가 ${items.length}개만 반환했습니다. 프롬프트를 조금 더 구체적으로 입력하거나 다시 시도하세요.`);\n  }\n\n  return items.map((q, i) => ({\n    id: q.id || `ai_${Date.now()}_${i}`,\n    type: q.type,\n    question: q.question,\n    options: q.options,\n    correctAnswer: q.correctAnswer,\n    score: typeof q.score === 'number' ? q.score : 10,\n  }));\n}\n\n\n"],"mappings":"AASA,KAAM,CAAAA,WAAW,CAAG,gBAAgB,CAEpC,MAAO,MAAM,CAAAC,YAAY,CAAIC,CAAS,EAAK,CACzCC,YAAY,CAACC,OAAO,CAACJ,WAAW,CAAE,CAACE,CAAC,EAAI,EAAE,EAAEG,IAAI,CAAC,CAAC,CAAC,CACrD,CAAC,CAED,MAAO,MAAM,CAAAC,YAAY,CAAGA,CAAA,GAAc,CACxC,MAAO,CAAAH,YAAY,CAACI,OAAO,CAACP,WAAW,CAAC,EAAI,EAAE,CAChD,CAAC,CAED,MAAO,eAAe,CAAAQ,2BAA2BA,CAACC,MAAc,CAAqC,KAAAC,gBAAA,CAAAC,iBAAA,CAAAC,qBAAA,CAAAC,sBAAA,CAAAC,sBAAA,IAAnC,CAAAC,KAAK,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,CAC1E,KAAM,CAAAG,MAAM,CAAGb,YAAY,CAAC,CAAC,CAC7B,GAAI,CAACa,MAAM,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,qBAAqB,CAAC,CAEnD,KAAM,CAAAC,KAAK,CAAG,kBAAkB,CAEhC;AACA,KAAM,CAAAC,GAAG,utDAAAC,MAAA,CAWIR,KAAK,iDAAY,CAE9B,KAAM,CAAAS,IAAI,qCAAAD,MAAA,CAAcd,MAAM,wCAAAc,MAAA,CAAaR,KAAK,4EAAwB,CAExE,KAAM,CAAAU,cAAc,CAAG,CACrBC,IAAI,CAAE,OAAO,CACbC,KAAK,CAAE,CACLD,IAAI,CAAE,QAAQ,CACdE,UAAU,CAAE,CACVC,EAAE,CAAE,CAAEH,IAAI,CAAE,QAAS,CAAC,CACtBA,IAAI,CAAE,CAAEA,IAAI,CAAE,QAAS,CAAC,CACxBI,QAAQ,CAAE,CAAEJ,IAAI,CAAE,QAAS,CAAC,CAC5BK,OAAO,CAAE,CAAEL,IAAI,CAAE,OAAO,CAAEC,KAAK,CAAE,CAAED,IAAI,CAAE,QAAS,CAAE,CAAC,CACrDM,aAAa,CAAE,CAAEN,IAAI,CAAE,QAAS,CAAC,CACjCO,KAAK,CAAE,CAAEP,IAAI,CAAE,QAAS,CAC1B,CAAC,CACDQ,QAAQ,CAAE,CAAC,MAAM,CAAE,UAAU,CAAE,eAAe,CAChD,CACF,CAAQ,CAER,KAAM,CAAAC,IAAI,CAAG,CACXC,QAAQ,CAAE,CACR,CAAEC,IAAI,CAAE,MAAM,CAAEC,KAAK,CAAE,CAAC,CAAEC,IAAI,CAAEjB,GAAI,CAAC,CAAE,CAAC,CACxC,CAAEe,IAAI,CAAE,MAAM,CAAEC,KAAK,CAAE,CAAC,CAAEC,IAAI,CAAEf,IAAK,CAAC,CAAE,CAAC,CAC1C,CACDgB,gBAAgB,CAAE,CAChBC,gBAAgB,CAAE,kBAAkB,CACpChB,cACF,CACF,CAAQ,CAERiB,OAAO,CAACC,IAAI,CAAC,kBAAkB,CAAE,CAAEtB,KAAK,CAAEN,KAAK,CAAEN,MAAO,CAAC,CAAC,CAE1D,KAAM,CAAAmC,GAAG,CAAG,KAAM,CAAAC,KAAK,4DAAAtB,MAAA,CAA4DF,KAAK,0BAAAE,MAAA,CAAwBuB,kBAAkB,CAAC3B,MAAM,CAAC,EAAK,CAC7I4B,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAC,kBAAmB,CAAC,CAC9Cb,IAAI,CAAEc,IAAI,CAACC,SAAS,CAACf,IAAI,CAC3B,CAAC,CAAC,CACF,GAAI,CAACS,GAAG,CAACO,EAAE,CAAE,CACXT,OAAO,CAACU,IAAI,CAAC,kBAAkB,CAAE,CAAEC,MAAM,CAAET,GAAG,CAACS,MAAM,CAAEC,UAAU,CAAEV,GAAG,CAACU,UAAW,CAAC,CAAC,CACpF,KAAM,IAAI,CAAAlC,KAAK,CAAC,cAAc,CAAC,CACjC,CACA,KAAM,CAAAmC,IAAI,CAAG,KAAM,CAAAX,GAAG,CAACY,IAAI,CAAC,CAAC,CAE7B,GAAI,CAAAjB,IAAY,CAAG,CAAAgB,IAAI,SAAJA,IAAI,kBAAA7C,gBAAA,CAAJ6C,IAAI,CAAEE,UAAU,UAAA/C,gBAAA,kBAAAC,iBAAA,CAAhBD,gBAAA,CAAmB,CAAC,CAAC,UAAAC,iBAAA,kBAAAC,qBAAA,CAArBD,iBAAA,CAAuB+C,OAAO,UAAA9C,qBAAA,kBAAAC,sBAAA,CAA9BD,qBAAA,CAAgC0B,KAAK,UAAAzB,sBAAA,kBAAAC,sBAAA,CAArCD,sBAAA,CAAwC,CAAC,CAAC,UAAAC,sBAAA,iBAA1CA,sBAAA,CAA4CyB,IAAI,GAAI,EAAE,CACzEG,OAAO,CAACC,IAAI,CAAC,kBAAkB,CAAE,CAAE1B,MAAM,CAAEsB,IAAI,CAACtB,MAAM,CAAE0C,OAAO,CAAEpB,IAAI,CAACqB,KAAK,CAAC,CAAC,CAAE,GAAG,CAAE,CAAC,CAAC,CACtF;AACA,GAAIrB,IAAI,CAACsB,UAAU,CAAC,KAAK,CAAC,CAAE,CAC1B,KAAM,CAAAC,KAAK,CAAGvB,IAAI,CAACwB,OAAO,CAAC,IAAI,CAAC,CAChC,KAAM,CAAAC,SAAS,CAAGzB,IAAI,CAAC0B,WAAW,CAAC,KAAK,CAAC,CACzC,GAAIH,KAAK,GAAK,CAAC,CAAC,EAAIE,SAAS,GAAK,CAAC,CAAC,CAAEzB,IAAI,CAAGA,IAAI,CAACqB,KAAK,CAACE,KAAK,CAAG,CAAC,CAAEE,SAAS,CAAC,CAC/E,CACA,GAAI,CAAAE,MAAW,CACf,GAAI,CACFA,MAAM,CAAGjB,IAAI,CAACkB,KAAK,CAAC5B,IAAI,CAAC,CAC3B,CAAE,MAAA6B,OAAA,CAAM,CACN1B,OAAO,CAACU,IAAI,CAAC,+BAA+B,CAAC,CAC7C,KAAM,CAAAiB,SAAS,CAAG9B,IAAI,CAACwB,OAAO,CAAC,GAAG,CAAC,CACnC,KAAM,CAAAO,OAAO,CAAG/B,IAAI,CAAC0B,WAAW,CAAC,GAAG,CAAC,CACrC,GAAII,SAAS,GAAK,CAAC,CAAC,EAAIC,OAAO,GAAK,CAAC,CAAC,CAAE,KAAM,IAAI,CAAAlD,KAAK,CAAC,aAAa,CAAC,CACtE8C,MAAM,CAAGjB,IAAI,CAACkB,KAAK,CAAC5B,IAAI,CAACqB,KAAK,CAACS,SAAS,CAAEC,OAAO,CAAG,CAAC,CAAC,CAAC,CACzD,CACA,KAAM,CAAAC,GAAU,CAAGC,KAAK,CAACC,OAAO,CAACP,MAAM,CAAC,CAAGA,MAAM,CAAG,CAACA,MAAM,CAAC,CAC5DxB,OAAO,CAACC,IAAI,CAAC,kBAAkB,CAAE,CAAE+B,QAAQ,CAAEH,GAAG,CAACtD,MAAO,CAAC,CAAC,CAC1D,KAAM,CAAA0D,WAAW,CAAIC,CAAM,EAAKA,CAAC,EAAI,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAACC,QAAQ,CAACD,CAAC,CAAClD,IAAI,CAAC,EAAI,MAAO,CAAAkD,CAAC,CAAC9C,QAAQ,GAAK,QAAQ,GAAK8C,CAAC,CAAClD,IAAI,GAAK,UAAU,EAAI8C,KAAK,CAACC,OAAO,CAACG,CAAC,CAAC7C,OAAO,CAAC,CAAC,CACxK,GAAI,CAAAJ,KAAK,CAAG4C,GAAG,CAACO,MAAM,CAACH,WAAW,CAAC,CACnCjC,OAAO,CAACC,IAAI,CAAC,uBAAuB,CAAE,CAAEoC,KAAK,CAAEpD,KAAK,CAACV,MAAM,CAAE+D,SAAS,CAAEjE,KAAM,CAAC,CAAC,CAChF,GAAIY,KAAK,CAACV,MAAM,CAAGF,KAAK,CAAEY,KAAK,CAAGA,KAAK,CAACiC,KAAK,CAAC,CAAC,CAAE7C,KAAK,CAAC,CACvD,GAAIY,KAAK,CAACV,MAAM,CAAGF,KAAK,CAAE,CACxB2B,OAAO,CAACU,IAAI,CAAC,kBAAkB,CAAE,CAAE2B,KAAK,CAAEpD,KAAK,CAACV,MAAM,CAAE+D,SAAS,CAAEjE,KAAM,CAAC,CAAC,CAC3E,KAAM,IAAI,CAAAK,KAAK,aAAAG,MAAA,CAAQI,KAAK,CAACV,MAAM,oNAA6C,CAAC,CACnF,CAEA,MAAO,CAAAU,KAAK,CAACsD,GAAG,CAAC,CAACL,CAAC,CAAEM,CAAC,IAAM,CAC1BrD,EAAE,CAAE+C,CAAC,CAAC/C,EAAE,QAAAN,MAAA,CAAU4D,IAAI,CAACC,GAAG,CAAC,CAAC,MAAA7D,MAAA,CAAI2D,CAAC,CAAE,CACnCxD,IAAI,CAAEkD,CAAC,CAAClD,IAAI,CACZI,QAAQ,CAAE8C,CAAC,CAAC9C,QAAQ,CACpBC,OAAO,CAAE6C,CAAC,CAAC7C,OAAO,CAClBC,aAAa,CAAE4C,CAAC,CAAC5C,aAAa,CAC9BC,KAAK,CAAE,MAAO,CAAA2C,CAAC,CAAC3C,KAAK,GAAK,QAAQ,CAAG2C,CAAC,CAAC3C,KAAK,CAAG,EACjD,CAAC,CAAC,CAAC,CACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}